OpenShadingLanguage 1.00
# Compiled by oslc 1.8.10
# options: -O2 -DNDEBUG -IC:/appleseed/appleseed/src/appleseed.shaders/include -o C:/appleseed/appleseed/sandbox/shaders/appleseed/as_texture.oso
shader as_texture	%meta{string,as_maya_node_name,"asTexture"} %meta{string,as_maya_classification,"drawdb/shader:rendernode/appleseed/texture/2d:swatch/AppleseedRenderSwatch:texture"} %meta{string,as_blender_node_name,"asTexture"} %meta{string,as_blender_category,"texture"} %meta{string,help,"Texture lookup node."} %meta{string,icon,"asTexture.png"} %meta{int,as_maya_type_id,1210874} %meta{string,as_max_class_id,"1220608380 1037264235"} %meta{string,as_max_plugin_type,"texture"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/texture/as_texture.html#label-as-texture"} 
param	string	in_filename	""		%meta{string,as_maya_attribute_name,"filename"} %meta{string,as_maya_attribute_short_name,"fil"} %meta{string,label,"Filename"} %meta{string,page,"Texture"} %meta{string,widget,"filename"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{2,124} %write{2147483647,-1}
param	int	in_atlas_type	0		%meta{string,as_maya_attribute_name,"atlasType"} %meta{string,as_maya_attribute_short_name,"atl"} %meta{string,label,"Atlas Type"} %meta{string,page,"Texture"} %meta{string,widget,"mapper"} %meta{string,options,"None:0|ZBrush:1|Mudbox:2|Mari:3"} %meta{string,help,"Texture atlas type (UDIM)."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{11,98} %write{2147483647,-1}
param	color	in_color	0 0 0		%meta{string,as_maya_attribute_name,"color"} %meta{string,as_maya_attribute_short_name,"c"} %meta{string,label,"Default Color"} %meta{string,page,"Texture"} %meta{string,help,"Default Fill color to use if the texture lookup fails."}  %read{167,167} %write{2147483647,-1}
param	float	in_alpha	1		%meta{string,as_maya_attribute_name,"alpha"} %meta{string,as_maya_attribute_short_name,"a"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Default Alpha"} %meta{string,page,"Texture"} %meta{string,help,"Default Fill alpha value to use if the texture lookup fails."}  %read{167,167} %write{2147483647,-1}
param	int	in_starting_channel	0		%meta{string,as_maya_attribute_name,"startingChannel"} %meta{string,as_maya_attribute_short_name,"sch"} %meta{string,label,"Starting Channel"} %meta{string,page,"Texture.Advanced"} %meta{int,min,0} %meta{int,softmax,4} %meta{string,help,"Starting channel for the texture lookup, usually 0 for an ordinary RGB texture."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{2147483647,-1} %write{2147483647,-1}
param	float	in_s_blur_amount	0		%meta{string,as_maya_attribute_name,"sBlurAmount"} %meta{string,as_maya_attribute_short_name,"sbl"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"S Blur"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Additional blur for texture lookup, along the S direction."}  %read{146,167} %write{2147483647,-1}
param	float	in_t_blur_amount	0		%meta{string,as_maya_attribute_name,"tBlurAmount"} %meta{string,as_maya_attribute_short_name,"tbl"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"T Blur"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Additional blur for texture lookup, along the T direction."}  %read{146,167} %write{2147483647,-1}
param	float	in_s_filter_width	1		%meta{string,as_maya_attribute_name,"sFilterWidth"} %meta{string,as_maya_attribute_short_name,"sfw"} %meta{float,min,0} %meta{float,softmax,1} %meta{string,label,"S Filter Width"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Multiplier to scale the size of the filter width along the S direction."}  %read{146,167} %write{2147483647,-1}
param	float	in_t_filter_width	1		%meta{string,as_maya_attribute_name,"tFilterWidth"} %meta{string,as_maya_attribute_short_name,"tfw"} %meta{float,min,0} %meta{float,softmax,1} %meta{string,label,"T Filter Width"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Multiplier to scale the size of the filter width along the S direction."} %meta{int,divider,1}  %read{146,167} %write{2147483647,-1}
param	int	in_s_wrap	0		%meta{string,as_maya_attribute_name,"sWrap"} %meta{string,as_maya_attribute_short_name,"swa"} %meta{string,label,"S Wrapping"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Use the wrapping mode set on the texture, or override it."}  %read{29,41} %write{2147483647,-1}
param	int	in_t_wrap	0		%meta{string,as_maya_attribute_name,"tWrap"} %meta{string,as_maya_attribute_short_name,"twa"} %meta{string,label,"T Wrapping"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Use the wrapping mode set on the texture, or override it."} %meta{int,divider,1}  %read{49,61} %write{2147483647,-1}
param	int	in_interpolation_method	0		%meta{string,as_maya_attribute_name,"interpolationMethod"} %meta{string,as_maya_attribute_short_name,"ft"} %meta{string,label,"Interpolation Method"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Smart Cubic:0|Cubic:1|Linear:2|Closest:3"} %meta{string,help,"Interpolation method to use for the lookup."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{132,161} %write{2147483647,-1}
param	int	in_enable_cms	0		%meta{string,as_maya_attribute_name,"enableCms"} %meta{string,as_maya_attribute_short_name,"cms"} %meta{string,label,"Enable CMS"} %meta{string,page,"Color Management"} %meta{string,widget,"checkBox"} %meta{string,help,"Enable color management. Ideally you use *.tx textures already converted instead, hence this is disabled by default."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{168,168} %write{2147483647,-1}
param	int	in_eotf	1		%meta{string,as_maya_attribute_name,"electroOpticalTransferFunction"} %meta{string,as_maya_attribute_short_name,"eot"} %meta{string,label,"Input Transfer Function"} %meta{string,page,"Color Management"} %meta{string,widget,"mapper"} %meta{string,options,"None/Raw:0|sRGB:1|Rec.709:2|Gamma 2.2:3|Gamma 2.4:4|Gamma 2.6 (DCI):5|Rec.1886:6|Rec.2020:7"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Transfer function of the ingested material, refers to the Opto-Electronic Transfer Function required to transform the input into scene-linear values."}  %read{181,383} %write{2147483647,-1}
param	string	in_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"RGBPrimaries"} %meta{string,as_maya_attribute_short_name,"rgb"} %meta{string,label,"RGB Primaries"} %meta{string,page,"Color Management"} %meta{string,widget,"popup"} %meta{string,options,"Raw|sRGB/Rec.709|AdobeRGB|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"RGB primaries, note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."}  %read{450,1569} %write{2147483647,-1}
param	string	in_workingspace_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"workingSpaceRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"wpr"} %meta{string,label,"Rendering RGB Primaries"} %meta{string,page,"Color Management"} %meta{string,widget,"popup"} %meta{string,options,"sRGB/Rec.709|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Working or rendering space RGB primaries. Note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."}  %read{464,1606} %write{2147483647,-1}
param	float[2]	in_texture_coords	0 0		%meta{string,as_maya_attribute_name,"uvCoord"} %meta{string,as_maya_attribute_short_name,"uv"} %meta{string,label,"UV Coords"} %meta{string,page,"Texture Coordinates"}  %read{13,20} %write{0,1} %derivs %initexpr
param	float[2]	in_texture_coords_filter	0 0		%meta{string,as_maya_attribute_name,"uvFilterSize"} %meta{string,as_maya_attribute_short_name,"fs"} %meta{string,label,"UV Filter Size"} %meta{string,page,"Texture Coordinates"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	color	out_color	0 0 0		%meta{string,as_maya_attribute_name,"outColor"} %meta{string,as_maya_attribute_short_name,"oc"} %meta{string,label,"Output Color"} %meta{string,widget,"null"}  %read{171,1624} %write{147,1576}
oparam	float	out_alpha	1		%meta{string,as_maya_attribute_name,"outAlpha"} %meta{string,as_maya_attribute_short_name,"oa"} %meta{string,label,"Output Alpha"} %meta{string,widget,"null"}  %read{2147483647,-1} %write{167,167}
oparam	float	out_channel	0		%meta{string,as_maya_attribute_name,"outChannel"} %meta{string,as_maya_attribute_short_name,"och"} %meta{string,label,"Output Single Channel"} %meta{string,widget,"null"}  %read{147,147} %write{146,1626}
global	float	u	%read{0,68} %write{2147483647,-1} %derivs
global	float	v	%read{1,69} %write{2147483647,-1} %derivs
local	float	___363_linear_out	%read{198,1394} %write{193,1393}
local	float	___373_linear_out	%read{240,268} %write{234,267}
local	float	___383_linear_out	%read{406,446} %write{399,445}
local	float	___384_alpha	%read{400,442} %write{393,435}
local	float	___384_beta	%read{397,437} %write{394,436}
local	color	___415_transformed_color	%read{670,670} %write{512,669}
local	vector	___415_v_color	%read{528,667} %write{472,472}
local	color	___427_transformed_color	%read{897,897} %write{723,896}
local	vector	___427_v_color	%read{720,894} %write{679,874}
local	color	___439_transformed_color	%read{1124,1124} %write{950,1123}
local	vector	___439_v_color	%read{947,1121} %write{906,1101}
local	color	___451_transformed_color	%read{1351,1351} %write{1177,1350}
local	vector	___451_v_color	%read{1174,1348} %write{1133,1331}
local	color	___463_transformed_color	%read{1573,1573} %write{1399,1572}
local	vector	___463_v_color	%read{1396,1567} %write{1355,1553}
local	color	___475_C	%read{1575,1575} %write{670,1574}
local	color	___653_coeffs	%read{1610,1617} %write{1580,1609}
local	int	___734_valid_file	%read{7,7} %write{5,6}
local	string[2]	wrap_mode	%read{129,151} %write{47,71}
local	string	texname	%read{146,167} %write{10,97}
local	float[2]	uv_coords	%read{127,149} %write{19,69} %derivs
local	int[2]	___738_match	%read{74,78} %write{2147483647,-1}
local	int[2]	___740_match	%read{87,91} %write{2147483647,-1}
local	string[20]	___742_results	%read{105,123} %write{101,123}
local	string	___742_texname	%read{105,123} %write{100,123}
local	int	___742_nums	%read{105,123} %write{101,101}
local	int	___742_found_tiles	%read{105,123} %write{102,123}
local	int	___743_i	%read{105,123} %write{104,123}
local	int	numchannels	%read{125,125} %write{124,124}
local	color	___750_linearized_color	%read{270,1618} %write{180,1575}
const	int	$const1	0		%read{0,1621} %write{2147483647,-1}
const	int	$const2	1		%read{1,1622} %write{2147483647,-1}
const	string	$const3	""		%read{2,100} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{2147483647,-1} %write{6,6}
const	string	$const4	"exists"		%read{6,6} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
temp	int	$tmp4	%read{12,12} %write{11,11}
temp	float	$tmp5	%read{19,19} %write{18,18} %derivs
temp	float	$tmp6	%read{15,18} %write{13,13} %derivs
const	float	$const5	1.0001		%read{15,24} %write{2147483647,-1}
const	string	$const6	"mod"		%read{14,21} %write{2147483647,-1}
temp	float	$tmp7	%read{17,17} %write{16,16} %derivs
temp	float	$tmp8	%read{16,16} %write{15,15} %derivs
temp	float	$tmp9	%read{18,18} %write{17,17} %derivs
temp	float	$tmp10	%read{26,26} %write{25,25} %derivs
temp	float	$tmp11	%read{22,25} %write{20,20} %derivs
temp	float	$tmp12	%read{24,24} %write{23,23} %derivs
temp	float	$tmp13	%read{23,23} %write{22,22} %derivs
temp	float	$tmp14	%read{25,25} %write{24,24} %derivs
const	string	$const7	"set_wrap_mode"		%read{27,27} %write{2147483647,-1}
temp	string	$tmp15	%read{47,47} %write{31,45}
const	string	$const8	"get_wrap_mode"		%read{28,48} %write{2147483647,-1}
temp	int	$tmp16	%read{30,30} %write{29,29}
const	string	$const9	"default"		%read{31,71} %write{2147483647,-1}
temp	int	$tmp17	%read{34,34} %write{33,33}
const	string	$const10	"black"		%read{35,55} %write{2147483647,-1}
const	int	$const11	2		%read{37,1624} %write{2147483647,-1}
temp	int	$tmp18	%read{38,38} %write{37,37}
const	string	$const12	"periodic"		%read{39,59} %write{2147483647,-1}
const	int	$const13	3		%read{41,271} %write{2147483647,-1}
temp	int	$tmp19	%read{42,42} %write{41,41}
const	string	$const14	"clamp"		%read{43,63} %write{2147483647,-1}
const	string	$const15	"mirror"		%read{45,65} %write{2147483647,-1}
temp	string	$tmp20	%read{67,67} %write{51,65}
temp	int	$tmp21	%read{50,50} %write{49,49}
temp	int	$tmp22	%read{54,54} %write{53,53}
temp	int	$tmp23	%read{58,58} %write{57,57}
temp	int	$tmp24	%read{62,62} %write{61,61}
temp	int	$tmp25	%read{73,73} %write{72,72}
temp	int	$tmp26	%read{75,75} %write{74,74}
const	string	$const16	"_u[0-9]{1}_v[0-9]{1}"		%read{74,87} %write{2147483647,-1}
temp	string	$tmp27	%read{83,83} %write{77,77}
temp	int	$tmp28	%read{77,77} %write{76,76}
const	string	$const17	"_<u>_<v>"		%read{83,83} %write{2147483647,-1}
temp	string	$tmp29	%read{84,84} %write{81,81}
temp	int	$tmp30	%read{81,81} %write{78,78}
const	string	$const18	"substr"		%read{79,92} %write{2147483647,-1}
temp	int	$tmp31	%read{81,81} %write{80,80}
const	string	$const19	"concat"		%read{82,95} %write{2147483647,-1}
temp	string	$tmp32	%read{84,84} %write{83,83}
temp	int	$tmp33	%read{86,86} %write{85,85}
temp	int	$tmp34	%read{88,88} %write{87,87}
temp	string	$tmp35	%read{96,96} %write{90,90}
temp	int	$tmp36	%read{90,90} %write{89,89}
const	string	$const20	"_<U>_<V>"		%read{96,96} %write{2147483647,-1}
temp	string	$tmp37	%read{97,97} %write{94,94}
temp	int	$tmp38	%read{94,94} %write{91,91}
temp	int	$tmp39	%read{94,94} %write{93,93}
temp	string	$tmp40	%read{97,97} %write{96,96}
temp	int	$tmp41	%read{99,99} %write{98,98}
const	string	$const21	"."		%read{101,101} %write{2147483647,-1}
temp	int	$tmp42	%read{103,123} %write{104,123}
temp	int	$tmp43	%read{105,123} %write{105,123}
temp	int	$tmp44	%read{105,123} %write{105,123}
temp	int	$tmp45	%read{105,123} %write{105,123}
temp	string	$tmp46	%read{105,123} %write{105,123}
const	string	$const22	"^[0-9]{4}"		%read{110,110} %write{2147483647,-1}
temp	int	$tmp47	%read{105,123} %write{105,123}
const	string	$const23	"<UDIM>"		%read{114,114} %write{2147483647,-1}
temp	string	$tmp48	%read{105,123} %write{105,123}
temp	int	$tmp49	%read{105,123} %write{105,123}
temp	int	$tmp50	%read{105,123} %write{105,123}
temp	string	$tmp51	%read{105,123} %write{105,123}
temp	int	$tmp52	%read{2147483647,-1} %write{124,124}
const	string	$const24	"channels"		%read{124,124} %write{2147483647,-1}
temp	int	$tmp53	%read{126,126} %write{125,125}
temp	float	$tmp54	%read{146,146} %write{127,127} %derivs
temp	float	$tmp55	%read{146,146} %write{128,128} %derivs
const	string	$const25	"sblur"		%read{146,167} %write{2147483647,-1}
const	string	$const26	"tblur"		%read{146,167} %write{2147483647,-1}
const	string	$const27	"swidth"		%read{146,167} %write{2147483647,-1}
const	string	$const28	"twidth"		%read{146,167} %write{2147483647,-1}
const	string	$const29	"swrap"		%read{146,167} %write{2147483647,-1}
temp	string	$tmp56	%read{146,146} %write{129,129}
const	string	$const30	"twrap"		%read{146,167} %write{2147483647,-1}
temp	string	$tmp57	%read{146,146} %write{130,130}
const	string	$const31	"interp"		%read{146,167} %write{2147483647,-1}
temp	string	$tmp58	%read{146,146} %write{134,144}
const	string	$const32	"get_interpolation_method"		%read{131,152} %write{2147483647,-1}
temp	int	$tmp59	%read{133,133} %write{132,132}
const	string	$const33	"smartcubic"		%read{134,155} %write{2147483647,-1}
temp	int	$tmp60	%read{137,137} %write{136,136}
const	string	$const34	"cubic"		%read{138,159} %write{2147483647,-1}
temp	int	$tmp61	%read{141,141} %write{140,140}
const	string	$const35	"linear"		%read{142,163} %write{2147483647,-1}
const	string	$const36	"closest"		%read{144,165} %write{2147483647,-1}
temp	float	$tmp62	%read{167,167} %write{148,148} %derivs
temp	float	$tmp63	%read{167,167} %write{149,149} %derivs
temp	string	$tmp64	%read{167,167} %write{150,150}
temp	string	$tmp65	%read{167,167} %write{151,151}
const	string	$const37	"missingcolor"		%read{167,167} %write{2147483647,-1}
const	string	$const38	"missingalpha"		%read{167,167} %write{2147483647,-1}
const	string	$const39	"alpha"		%read{167,167} %write{2147483647,-1}
temp	string	$tmp66	%read{167,167} %write{155,165}
temp	int	$tmp67	%read{154,154} %write{153,153}
temp	int	$tmp68	%read{158,158} %write{157,157}
temp	int	$tmp69	%read{162,162} %write{161,161}
temp	int	$tmp70	%read{169,179} %write{168,178}
temp	float	$tmp71	%read{176,176} %write{175,175}
const	string	$const40	"max"		%read{170,453} %write{2147483647,-1}
temp	float	$tmp72	%read{175,175} %write{171,171}
temp	float	$tmp73	%read{175,175} %write{174,174}
temp	float	$tmp74	%read{174,174} %write{172,172}
temp	float	$tmp75	%read{174,174} %write{173,173}
const	float	$const41	0		%read{176,1455} %write{2147483647,-1}
temp	int	$tmp76	%read{177,177} %write{176,176}
temp	int	$tmp77	%read{178,178} %write{177,177}
const	color	$const42	0 0 0		%read{180,1609} %write{2147483647,-1}
temp	int	$tmp78	%read{182,182} %write{181,181}
temp	int	$tmp79	%read{185,185} %write{184,184}
const	string	$const43	"sRGB_EOTF"		%read{186,1384} %write{2147483647,-1}
temp	float	$tmp80	%read{223,223} %write{198,198}
temp	float	$tmp81	%read{189,196} %write{187,187}
const	float	$const44	0.040449999		%read{189,1385} %write{2147483647,-1}
temp	int	$tmp82	%read{190,190} %write{189,189}
const	float	$const45	0.055		%read{191,1387} %write{2147483647,-1}
temp	float	$tmp83	%read{192,192} %write{191,191}
const	float	$const46	1.0549999		%read{192,1388} %write{2147483647,-1}
temp	float	$tmp84	%read{193,193} %write{192,192}
const	float	$const47	2.4000001		%read{193,1551} %write{2147483647,-1}
temp	int	$tmp85	%read{195,195} %write{194,194}
const	float	$const48	12.92		%read{196,1392} %write{2147483647,-1}
temp	float	$tmp86	%read{223,223} %write{210,210}
temp	float	$tmp87	%read{201,208} %write{199,199}
temp	int	$tmp88	%read{202,202} %write{201,201}
temp	float	$tmp89	%read{204,204} %write{203,203}
temp	float	$tmp90	%read{205,205} %write{204,204}
temp	int	$tmp91	%read{207,207} %write{206,206}
temp	float	$tmp92	%read{223,223} %write{222,222}
temp	float	$tmp93	%read{213,220} %write{211,211}
temp	int	$tmp94	%read{214,214} %write{213,213}
temp	float	$tmp95	%read{216,216} %write{215,215}
temp	float	$tmp96	%read{217,217} %write{216,216}
temp	int	$tmp97	%read{219,219} %write{218,218}
temp	int	$tmp98	%read{225,225} %write{224,224}
temp	color	$tmp99	%read{270,270} %write{269,269}
const	string	$const49	"Rec709_EOTF"		%read{226,256} %write{2147483647,-1}
temp	float	$tmp100	%read{269,269} %write{240,240}
temp	float	$tmp101	%read{229,238} %write{227,227}
const	float	$const50	0.081		%read{229,257} %write{2147483647,-1}
temp	int	$tmp102	%read{230,230} %write{229,229}
const	float	$const51	0.098999999		%read{231,259} %write{2147483647,-1}
temp	float	$tmp103	%read{232,232} %write{231,231}
const	float	$const52	1.099		%read{232,433} %write{2147483647,-1}
temp	float	$tmp104	%read{234,234} %write{232,232}
const	float	$const53	0.44999999		%read{233,443} %write{2147483647,-1}
temp	float	$tmp105	%read{234,234} %write{233,233}
const	float	$const54	1		%read{233,443} %write{2147483647,-1}
temp	int	$tmp106	%read{236,236} %write{235,235}
const	float	$const55	4.5		%read{237,439} %write{2147483647,-1}
temp	float	$tmp107	%read{238,238} %write{237,237}
temp	float	$tmp108	%read{269,269} %write{254,254}
temp	float	$tmp109	%read{243,252} %write{241,241}
temp	int	$tmp110	%read{244,244} %write{243,243}
temp	float	$tmp111	%read{246,246} %write{245,245}
temp	float	$tmp112	%read{248,248} %write{246,246}
temp	float	$tmp113	%read{248,248} %write{247,247}
temp	int	$tmp114	%read{250,250} %write{249,249}
temp	float	$tmp115	%read{252,252} %write{251,251}
temp	float	$tmp116	%read{269,269} %write{268,268}
temp	float	$tmp117	%read{257,266} %write{255,255}
temp	int	$tmp118	%read{258,258} %write{257,257}
temp	float	$tmp119	%read{260,260} %write{259,259}
temp	float	$tmp120	%read{262,262} %write{260,260}
temp	float	$tmp121	%read{262,262} %write{261,261}
temp	int	$tmp122	%read{264,264} %write{263,263}
temp	float	$tmp123	%read{266,266} %write{265,265}
temp	int	$tmp124	%read{2147483647,-1} %write{270,270}
temp	int	$tmp125	%read{272,272} %write{271,271}
temp	color	$tmp126	%read{299,299} %write{298,298}
const	float	$const56	2.2		%read{280,1519} %write{2147483647,-1}
const	string	$const57	"gamma_CCTF"		%read{273,1546} %write{2147483647,-1}
temp	float	$tmp127	%read{298,298} %write{278,280}
temp	float	$tmp128	%read{276,280} %write{274,274}
temp	int	$tmp129	%read{277,277} %write{276,276}
temp	float	$tmp130	%read{298,298} %write{286,288}
temp	float	$tmp131	%read{284,288} %write{282,282}
temp	int	$tmp132	%read{285,285} %write{284,284}
temp	float	$tmp133	%read{298,298} %write{294,296}
temp	float	$tmp134	%read{292,296} %write{290,290}
temp	int	$tmp135	%read{293,293} %write{292,292}
temp	int	$tmp136	%read{2147483647,-1} %write{299,299}
const	int	$const58	4		%read{300,300} %write{2147483647,-1}
temp	int	$tmp137	%read{301,301} %write{300,300}
temp	color	$tmp138	%read{328,328} %write{327,327}
temp	float	$tmp139	%read{327,327} %write{307,309}
temp	float	$tmp140	%read{305,309} %write{303,303}
temp	int	$tmp141	%read{306,306} %write{305,305}
temp	float	$tmp142	%read{327,327} %write{315,317}
temp	float	$tmp143	%read{313,317} %write{311,311}
temp	int	$tmp144	%read{314,314} %write{313,313}
temp	float	$tmp145	%read{327,327} %write{323,325}
temp	float	$tmp146	%read{321,325} %write{319,319}
temp	int	$tmp147	%read{322,322} %write{321,321}
temp	int	$tmp148	%read{2147483647,-1} %write{328,328}
const	int	$const59	5		%read{329,329} %write{2147483647,-1}
temp	int	$tmp149	%read{330,330} %write{329,329}
temp	color	$tmp150	%read{357,357} %write{356,356}
const	float	$const60	2.5999999		%read{338,354} %write{2147483647,-1}
temp	float	$tmp151	%read{356,356} %write{336,338}
temp	float	$tmp152	%read{334,338} %write{332,332}
temp	int	$tmp153	%read{335,335} %write{334,334}
temp	float	$tmp154	%read{356,356} %write{344,346}
temp	float	$tmp155	%read{342,346} %write{340,340}
temp	int	$tmp156	%read{343,343} %write{342,342}
temp	float	$tmp157	%read{356,356} %write{352,354}
temp	float	$tmp158	%read{350,354} %write{348,348}
temp	int	$tmp159	%read{351,351} %write{350,350}
temp	int	$tmp160	%read{2147483647,-1} %write{357,357}
const	int	$const61	6		%read{358,358} %write{2147483647,-1}
temp	int	$tmp161	%read{359,359} %write{358,358}
const	string	$const62	"Rec1886_EOTF"		%read{360,1451} %write{2147483647,-1}
temp	float	$tmp162	%read{382,382} %write{365,366}
temp	float	$tmp163	%read{363,365} %write{361,361}
temp	int	$tmp164	%read{364,364} %write{363,363}
temp	float	$tmp165	%read{382,382} %write{372,373}
temp	float	$tmp166	%read{370,372} %write{368,368}
temp	int	$tmp167	%read{371,371} %write{370,370}
temp	float	$tmp168	%read{382,382} %write{379,380}
temp	float	$tmp169	%read{377,379} %write{375,375}
temp	int	$tmp170	%read{378,378} %write{377,377}
const	int	$const63	7		%read{383,383} %write{2147483647,-1}
temp	int	$tmp171	%read{384,384} %write{383,383}
temp	color	$tmp172	%read{448,448} %write{447,447}
const	string	$const64	"Rec2020_EOTF"		%read{385,428} %write{2147483647,-1}
const	int	$const65	12		%read{391,431} %write{2147483647,-1}
temp	float	$tmp173	%read{447,447} %write{406,406}
temp	float	$tmp174	%read{389,401} %write{387,387}
temp	int	$tmp175	%read{390,390} %write{389,389}
const	int	$const66	10		%read{391,431} %write{2147483647,-1}
temp	int	$tmp176	%read{392,392} %write{391,391}
const	float	$const67	0.017999999		%read{394,434} %write{2147483647,-1}
const	float	$const68	1.0993		%read{395,435} %write{2147483647,-1}
const	float	$const69	0.018100001		%read{396,436} %write{2147483647,-1}
temp	int	$tmp177	%read{398,398} %write{397,397}
temp	float	$tmp178	%read{401,401} %write{400,400}
temp	float	$tmp179	%read{402,402} %write{401,401}
temp	float	$tmp180	%read{404,404} %write{402,402}
temp	float	$tmp181	%read{404,404} %write{403,403}
temp	float	$tmp182	%read{447,447} %write{426,426}
temp	float	$tmp183	%read{409,421} %write{407,407}
temp	int	$tmp184	%read{410,410} %write{409,409}
temp	int	$tmp185	%read{412,412} %write{411,411}
temp	int	$tmp186	%read{418,418} %write{417,417}
temp	float	$tmp187	%read{421,421} %write{420,420}
temp	float	$tmp188	%read{422,422} %write{421,421}
temp	float	$tmp189	%read{424,424} %write{422,422}
temp	float	$tmp190	%read{424,424} %write{423,423}
temp	float	$tmp191	%read{447,447} %write{446,446}
temp	float	$tmp192	%read{429,441} %write{427,427}
temp	int	$tmp193	%read{430,430} %write{429,429}
temp	int	$tmp194	%read{432,432} %write{431,431}
temp	int	$tmp195	%read{438,438} %write{437,437}
temp	float	$tmp196	%read{441,441} %write{440,440}
temp	float	$tmp197	%read{442,442} %write{441,441}
temp	float	$tmp198	%read{444,444} %write{442,442}
temp	float	$tmp199	%read{444,444} %write{443,443}
temp	int	$tmp200	%read{2147483647,-1} %write{448,448}
const	string	$const70	"Raw"		%read{450,450} %write{2147483647,-1}
temp	int	$tmp201	%read{451,451} %write{450,450}
temp	int	$tmp202	%read{452,462} %write{451,461}
temp	float	$tmp203	%read{459,459} %write{458,458}
temp	float	$tmp204	%read{458,458} %write{454,454}
temp	float	$tmp205	%read{458,458} %write{457,457}
temp	float	$tmp206	%read{457,457} %write{455,455}
temp	float	$tmp207	%read{457,457} %write{456,456}
temp	int	$tmp208	%read{460,460} %write{459,459}
temp	int	$tmp209	%read{461,461} %write{460,460}
const	string	$const71	"transform_colorspace_to_workingspace"		%read{463,463} %write{2147483647,-1}
const	string	$const72	"scene-linear Rec 709/sRGB"		%read{464,1400} %write{2147483647,-1}
temp	int	$tmp210	%read{465,465} %write{464,464}
temp	int	$tmp211	%read{466,470} %write{465,469}
const	string	$const73	"sRGB/Rec.709"		%read{467,1589} %write{2147483647,-1}
temp	int	$tmp212	%read{468,468} %write{467,467}
temp	int	$tmp213	%read{469,469} %write{468,468}
const	string	$const74	"transform_color_space_to_Rec709"		%read{471,471} %write{2147483647,-1}
const	string	$const75	"sRGB"		%read{473,1584} %write{2147483647,-1}
temp	int	$tmp214	%read{474,474} %write{473,473}
temp	float	$tmp215	%read{512,512} %write{487,487}
temp	float	$tmp216	%read{478,485} %write{476,476}
temp	int	$tmp217	%read{479,479} %write{478,478}
temp	float	$tmp218	%read{481,481} %write{480,480}
temp	float	$tmp219	%read{482,482} %write{481,481}
temp	int	$tmp220	%read{484,484} %write{483,483}
temp	float	$tmp221	%read{512,512} %write{499,499}
temp	float	$tmp222	%read{490,497} %write{488,488}
temp	int	$tmp223	%read{491,491} %write{490,490}
temp	float	$tmp224	%read{493,493} %write{492,492}
temp	float	$tmp225	%read{494,494} %write{493,493}
temp	int	$tmp226	%read{496,496} %write{495,495}
temp	float	$tmp227	%read{512,512} %write{511,511}
temp	float	$tmp228	%read{502,509} %write{500,500}
temp	int	$tmp229	%read{503,503} %write{502,502}
temp	float	$tmp230	%read{505,505} %write{504,504}
temp	float	$tmp231	%read{506,506} %write{505,505}
temp	int	$tmp232	%read{508,508} %write{507,507}
temp	int	$tmp233	%read{514,514} %write{513,513}
temp	int	$tmp234	%read{515,519} %write{514,518}
temp	int	$tmp235	%read{517,517} %write{516,516}
temp	int	$tmp236	%read{518,518} %write{517,517}
const	string	$const76	"scene-linear Rec 2020"		%read{521,1411} %write{2147483647,-1}
temp	int	$tmp237	%read{522,522} %write{521,521}
temp	int	$tmp238	%read{523,527} %write{522,526}
const	string	$const77	"Rec.2020"		%read{524,1597} %write{2147483647,-1}
temp	int	$tmp239	%read{525,525} %write{524,524}
temp	int	$tmp240	%read{526,526} %write{525,525}
temp	float	$tmp241	%read{531,531} %write{528,528}
const	vector	$const78	1.660491 -0.58764112 -0.072849788		%read{528,528} %write{2147483647,-1}
temp	float	$tmp243	%read{531,531} %write{529,529}
const	vector	$const79	-0.12455047 1.1328999 -0.0083494196		%read{529,529} %write{2147483647,-1}
temp	float	$tmp245	%read{531,531} %write{530,530}
const	vector	$const80	-0.01815076 -0.10057809 1.1187297		%read{530,530} %write{2147483647,-1}
const	string	$const81	"scene-linear DCI-P3"		%read{532,1422} %write{2147483647,-1}
temp	int	$tmp247	%read{533,533} %write{532,532}
temp	int	$tmp248	%read{534,538} %write{533,537}
const	string	$const82	"DCI-P3"		%read{535,1606} %write{2147483647,-1}
temp	int	$tmp249	%read{536,536} %write{535,535}
temp	int	$tmp250	%read{537,537} %write{536,536}
temp	float	$tmp251	%read{542,542} %write{539,539}
const	vector	$const83	1.1575164 -0.15496238 -0.0025540299		%read{539,539} %write{2147483647,-1}
temp	float	$tmp253	%read{542,542} %write{540,540}
const	vector	$const84	-0.041500069 1.0455679 -0.0040678498		%read{540,540} %write{2147483647,-1}
temp	float	$tmp255	%read{542,542} %write{541,541}
const	vector	$const85	-0.018050039 -0.078578271 1.0966283		%read{541,541} %write{2147483647,-1}
const	string	$const86	"camera Rec 709"		%read{543,1433} %write{2147483647,-1}
temp	int	$tmp257	%read{544,544} %write{543,543}
temp	float	$tmp258	%read{567,567} %write{550,551}
temp	float	$tmp259	%read{548,550} %write{546,546}
temp	int	$tmp260	%read{549,549} %write{548,548}
temp	float	$tmp261	%read{567,567} %write{557,558}
temp	float	$tmp262	%read{555,557} %write{553,553}
temp	int	$tmp263	%read{556,556} %write{555,555}
temp	float	$tmp264	%read{567,567} %write{564,565}
temp	float	$tmp265	%read{562,564} %write{560,560}
temp	int	$tmp266	%read{563,563} %write{562,562}
const	string	$const87	"gamma 1.8 Rec 709"		%read{568,1462} %write{2147483647,-1}
temp	int	$tmp267	%read{569,569} %write{568,568}
const	float	$const88	1.8		%read{577,1487} %write{2147483647,-1}
temp	float	$tmp268	%read{595,595} %write{575,577}
temp	float	$tmp269	%read{573,577} %write{571,571}
temp	int	$tmp270	%read{574,574} %write{573,573}
temp	float	$tmp271	%read{595,595} %write{583,585}
temp	float	$tmp272	%read{581,585} %write{579,579}
temp	int	$tmp273	%read{582,582} %write{581,581}
temp	float	$tmp274	%read{595,595} %write{591,593}
temp	float	$tmp275	%read{589,593} %write{587,587}
temp	int	$tmp276	%read{590,590} %write{589,589}
const	string	$const89	"gamma 2.2 Rec 709"		%read{596,1494} %write{2147483647,-1}
temp	int	$tmp277	%read{597,597} %write{596,596}
temp	float	$tmp278	%read{623,623} %write{603,605}
temp	float	$tmp279	%read{601,605} %write{599,599}
temp	int	$tmp280	%read{602,602} %write{601,601}
temp	float	$tmp281	%read{623,623} %write{611,613}
temp	float	$tmp282	%read{609,613} %write{607,607}
temp	int	$tmp283	%read{610,610} %write{609,609}
temp	float	$tmp284	%read{623,623} %write{619,621}
temp	float	$tmp285	%read{617,621} %write{615,615}
temp	int	$tmp286	%read{618,618} %write{617,617}
const	string	$const90	"gamma 2.4 Rec 709 (video)"		%read{624,1526} %write{2147483647,-1}
temp	int	$tmp287	%read{625,625} %write{624,624}
temp	float	$tmp288	%read{651,651} %write{631,633}
temp	float	$tmp289	%read{629,633} %write{627,627}
temp	int	$tmp290	%read{630,630} %write{629,629}
temp	float	$tmp291	%read{651,651} %write{639,641}
temp	float	$tmp292	%read{637,641} %write{635,635}
temp	int	$tmp293	%read{638,638} %write{637,637}
temp	float	$tmp294	%read{651,651} %write{647,649}
temp	float	$tmp295	%read{645,649} %write{643,643}
temp	int	$tmp296	%read{646,646} %write{645,645}
const	string	$const91	"ACES2065-1"		%read{652,1558} %write{2147483647,-1}
temp	int	$tmp297	%read{653,653} %write{652,652}
temp	int	$tmp298	%read{654,658} %write{653,657}
const	string	$const92	"ACES"		%read{655,1600} %write{2147483647,-1}
temp	int	$tmp299	%read{656,656} %write{655,655}
temp	int	$tmp300	%read{657,657} %write{656,656}
temp	float	$tmp301	%read{662,662} %write{659,659}
const	vector	$const93	2.5216861 -1.134131 -0.38755521		%read{659,659} %write{2147483647,-1}
temp	float	$tmp303	%read{662,662} %write{660,660}
const	vector	$const94	-0.2764799 1.372719 -0.096239172		%read{660,660} %write{2147483647,-1}
temp	float	$tmp305	%read{662,662} %write{661,661}
const	vector	$const95	-0.01537806 -0.15297534 1.1683534		%read{661,661} %write{2147483647,-1}
const	string	$const96	"ACEScg"		%read{663,1603} %write{2147483647,-1}
temp	int	$tmp307	%read{664,664} %write{663,663}
temp	float	$tmp308	%read{668,668} %write{665,665}
const	vector	$const97	1.7050509 -0.62179214 -0.083258867		%read{665,665} %write{2147483647,-1}
temp	float	$tmp310	%read{668,668} %write{666,666}
const	vector	$const98	-0.13025641 1.1408048 -0.01054832		%read{666,666} %write{2147483647,-1}
temp	float	$tmp312	%read{668,668} %write{667,667}
const	vector	$const99	-0.02400336 -0.12896898 1.1529723		%read{667,667} %write{2147483647,-1}
temp	int	$tmp314	%read{672,672} %write{671,671}
temp	int	$tmp315	%read{673,677} %write{672,676}
temp	int	$tmp316	%read{675,675} %write{674,674}
temp	int	$tmp317	%read{676,676} %write{675,675}
const	string	$const100	"transform_color_space_to_Rec2020"		%read{678,678} %write{2147483647,-1}
temp	int	$tmp318	%read{681,681} %write{680,680}
temp	float	$tmp319	%read{719,719} %write{694,694}
temp	float	$tmp320	%read{685,692} %write{683,683}
temp	int	$tmp321	%read{686,686} %write{685,685}
temp	float	$tmp322	%read{688,688} %write{687,687}
temp	float	$tmp323	%read{689,689} %write{688,688}
temp	int	$tmp324	%read{691,691} %write{690,690}
temp	float	$tmp325	%read{719,719} %write{706,706}
temp	float	$tmp326	%read{697,704} %write{695,695}
temp	int	$tmp327	%read{698,698} %write{697,697}
temp	float	$tmp328	%read{700,700} %write{699,699}
temp	float	$tmp329	%read{701,701} %write{700,700}
temp	int	$tmp330	%read{703,703} %write{702,702}
temp	float	$tmp331	%read{719,719} %write{718,718}
temp	float	$tmp332	%read{709,716} %write{707,707}
temp	int	$tmp333	%read{710,710} %write{709,709}
temp	float	$tmp334	%read{712,712} %write{711,711}
temp	float	$tmp335	%read{713,713} %write{712,712}
temp	int	$tmp336	%read{715,715} %write{714,714}
temp	float	$tmp337	%read{723,723} %write{720,720}
const	vector	$const101	0.62740391 0.32928303 0.043313071		%read{720,875} %write{2147483647,-1}
temp	float	$tmp339	%read{723,723} %write{721,721}
const	vector	$const102	0.069097288 0.91954041 0.01136232		%read{721,876} %write{2147483647,-1}
temp	float	$tmp341	%read{723,723} %write{722,722}
const	vector	$const103	0.016391439 0.088013314 0.89559525		%read{722,877} %write{2147483647,-1}
temp	int	$tmp343	%read{725,725} %write{724,724}
temp	int	$tmp344	%read{726,730} %write{725,729}
temp	int	$tmp345	%read{728,728} %write{727,727}
temp	int	$tmp346	%read{729,729} %write{728,728}
temp	float	$tmp347	%read{734,734} %write{731,731}
temp	float	$tmp349	%read{734,734} %write{732,732}
temp	float	$tmp351	%read{734,734} %write{733,733}
temp	int	$tmp353	%read{736,736} %write{735,735}
temp	int	$tmp354	%read{737,741} %write{736,740}
temp	int	$tmp355	%read{739,739} %write{738,738}
temp	int	$tmp356	%read{740,740} %write{739,739}
temp	int	$tmp357	%read{744,744} %write{743,743}
temp	int	$tmp358	%read{745,749} %write{744,748}
temp	int	$tmp359	%read{747,747} %write{746,746}
temp	int	$tmp360	%read{748,748} %write{747,747}
temp	float	$tmp361	%read{753,753} %write{750,750}
const	vector	$const104	0.71178323 0.24366032 0.04455645		%read{750,750} %write{2147483647,-1}
temp	float	$tmp363	%read{753,753} %write{751,751}
const	vector	$const105	0.041514158 0.94984162 0.0085432101		%read{751,751} %write{2147483647,-1}
temp	float	$tmp365	%read{753,753} %write{752,752}
const	vector	$const106	-0.00084473001 0.01910951 0.98173523		%read{752,752} %write{2147483647,-1}
temp	int	$tmp367	%read{755,755} %write{754,754}
temp	float	$tmp368	%read{778,778} %write{761,762}
temp	float	$tmp369	%read{759,761} %write{757,757}
temp	int	$tmp370	%read{760,760} %write{759,759}
temp	float	$tmp371	%read{778,778} %write{768,769}
temp	float	$tmp372	%read{766,768} %write{764,764}
temp	int	$tmp373	%read{767,767} %write{766,766}
temp	float	$tmp374	%read{778,778} %write{775,776}
temp	float	$tmp375	%read{773,775} %write{771,771}
temp	int	$tmp376	%read{774,774} %write{773,773}
temp	float	$tmp377	%read{782,782} %write{779,779}
temp	float	$tmp379	%read{782,782} %write{780,780}
temp	float	$tmp381	%read{782,782} %write{781,781}
temp	int	$tmp383	%read{784,784} %write{783,783}
temp	float	$tmp384	%read{810,810} %write{790,792}
temp	float	$tmp385	%read{788,792} %write{786,786}
temp	int	$tmp386	%read{789,789} %write{788,788}
temp	float	$tmp387	%read{810,810} %write{798,800}
temp	float	$tmp388	%read{796,800} %write{794,794}
temp	int	$tmp389	%read{797,797} %write{796,796}
temp	float	$tmp390	%read{810,810} %write{806,808}
temp	float	$tmp391	%read{804,808} %write{802,802}
temp	int	$tmp392	%read{805,805} %write{804,804}
temp	float	$tmp393	%read{814,814} %write{811,811}
temp	float	$tmp395	%read{814,814} %write{812,812}
temp	float	$tmp397	%read{814,814} %write{813,813}
temp	int	$tmp399	%read{816,816} %write{815,815}
temp	float	$tmp400	%read{842,842} %write{822,824}
temp	float	$tmp401	%read{820,824} %write{818,818}
temp	int	$tmp402	%read{821,821} %write{820,820}
temp	float	$tmp403	%read{842,842} %write{830,832}
temp	float	$tmp404	%read{828,832} %write{826,826}
temp	int	$tmp405	%read{829,829} %write{828,828}
temp	float	$tmp406	%read{842,842} %write{838,840}
temp	float	$tmp407	%read{836,840} %write{834,834}
temp	int	$tmp408	%read{837,837} %write{836,836}
temp	float	$tmp409	%read{846,846} %write{843,843}
temp	float	$tmp411	%read{846,846} %write{844,844}
temp	float	$tmp413	%read{846,846} %write{845,845}
temp	int	$tmp415	%read{848,848} %write{847,847}
temp	float	$tmp416	%read{874,874} %write{854,856}
temp	float	$tmp417	%read{852,856} %write{850,850}
temp	int	$tmp418	%read{853,853} %write{852,852}
temp	float	$tmp419	%read{874,874} %write{862,864}
temp	float	$tmp420	%read{860,864} %write{858,858}
temp	int	$tmp421	%read{861,861} %write{860,860}
temp	float	$tmp422	%read{874,874} %write{870,872}
temp	float	$tmp423	%read{868,872} %write{866,866}
temp	int	$tmp424	%read{869,869} %write{868,868}
temp	float	$tmp425	%read{878,878} %write{875,875}
temp	float	$tmp427	%read{878,878} %write{876,876}
temp	float	$tmp429	%read{878,878} %write{877,877}
temp	int	$tmp431	%read{880,880} %write{879,879}
temp	int	$tmp432	%read{881,885} %write{880,884}
temp	int	$tmp433	%read{883,883} %write{882,882}
temp	int	$tmp434	%read{884,884} %write{883,883}
temp	float	$tmp435	%read{889,889} %write{886,886}
const	vector	$const107	1.4904095 -0.26617092 -0.2242386		%read{886,886} %write{2147483647,-1}
temp	float	$tmp437	%read{889,889} %write{887,887}
const	vector	$const108	-0.080167502 1.1821672 -0.1019996		%read{887,887} %write{2147483647,-1}
temp	float	$tmp439	%read{889,889} %write{888,888}
const	vector	$const109	0.0032276299 -0.034776479 1.0315489		%read{888,888} %write{2147483647,-1}
temp	int	$tmp441	%read{891,891} %write{890,890}
temp	float	$tmp442	%read{895,895} %write{892,892}
const	vector	$const110	1.0258248 -0.020053189 -0.0057715601		%read{892,892} %write{2147483647,-1}
temp	float	$tmp444	%read{895,895} %write{893,893}
const	vector	$const111	-0.00223437 1.0045865 -0.0023521299		%read{893,893} %write{2147483647,-1}
temp	float	$tmp446	%read{895,895} %write{894,894}
const	vector	$const112	-0.0050133499 -0.02529007 1.0303035		%read{894,894} %write{2147483647,-1}
temp	int	$tmp448	%read{899,899} %write{898,898}
temp	int	$tmp449	%read{900,904} %write{899,903}
temp	int	$tmp450	%read{902,902} %write{901,901}
temp	int	$tmp451	%read{903,903} %write{902,902}
const	string	$const113	"transform_color_space_to_DCIP3"		%read{905,905} %write{2147483647,-1}
temp	int	$tmp452	%read{908,908} %write{907,907}
temp	float	$tmp453	%read{946,946} %write{921,921}
temp	float	$tmp454	%read{912,919} %write{910,910}
temp	int	$tmp455	%read{913,913} %write{912,912}
temp	float	$tmp456	%read{915,915} %write{914,914}
temp	float	$tmp457	%read{916,916} %write{915,915}
temp	int	$tmp458	%read{918,918} %write{917,917}
temp	float	$tmp459	%read{946,946} %write{933,933}
temp	float	$tmp460	%read{924,931} %write{922,922}
temp	int	$tmp461	%read{925,925} %write{924,924}
temp	float	$tmp462	%read{927,927} %write{926,926}
temp	float	$tmp463	%read{928,928} %write{927,927}
temp	int	$tmp464	%read{930,930} %write{929,929}
temp	float	$tmp465	%read{946,946} %write{945,945}
temp	float	$tmp466	%read{936,943} %write{934,934}
temp	int	$tmp467	%read{937,937} %write{936,936}
temp	float	$tmp468	%read{939,939} %write{938,938}
temp	float	$tmp469	%read{940,940} %write{939,939}
temp	int	$tmp470	%read{942,942} %write{941,941}
temp	float	$tmp471	%read{950,950} %write{947,947}
const	vector	$const114	0.86857975 0.12891914 0.0025011201		%read{947,1102} %write{2147483647,-1}
temp	float	$tmp473	%read{950,950} %write{948,948}
const	vector	$const115	0.034540411 0.96181136 0.0036482001		%read{948,1103} %write{2147483647,-1}
temp	float	$tmp475	%read{950,950} %write{949,949}
const	vector	$const116	0.01677143 0.071039997 0.91218859		%read{949,1104} %write{2147483647,-1}
temp	int	$tmp477	%read{952,952} %write{951,951}
temp	int	$tmp478	%read{953,957} %write{952,956}
temp	int	$tmp479	%read{955,955} %write{954,954}
temp	int	$tmp480	%read{956,956} %write{955,955}
temp	float	$tmp481	%read{961,961} %write{958,958}
temp	float	$tmp483	%read{961,961} %write{959,959}
temp	float	$tmp485	%read{961,961} %write{960,960}
temp	int	$tmp487	%read{963,963} %write{962,962}
temp	int	$tmp488	%read{964,968} %write{963,967}
temp	int	$tmp489	%read{966,966} %write{965,965}
temp	int	$tmp490	%read{967,967} %write{966,966}
temp	float	$tmp491	%read{972,972} %write{969,969}
const	vector	$const117	1.4261665 -0.36461228 -0.061554238		%read{969,969} %write{2147483647,-1}
temp	float	$tmp493	%read{972,972} %write{970,970}
const	vector	$const118	-0.062506244 1.0689718 -0.0064654802		%read{970,970} %write{2147483647,-1}
temp	float	$tmp495	%read{972,972} %write{971,971}
const	vector	$const119	0.00244382 -0.021121301 1.0186775		%read{971,971} %write{2147483647,-1}
temp	int	$tmp497	%read{974,974} %write{973,973}
temp	int	$tmp498	%read{975,979} %write{974,978}
temp	int	$tmp499	%read{977,977} %write{976,976}
temp	int	$tmp500	%read{978,978} %write{977,977}
temp	int	$tmp501	%read{982,982} %write{981,981}
temp	float	$tmp502	%read{1005,1005} %write{988,989}
temp	float	$tmp503	%read{986,988} %write{984,984}
temp	int	$tmp504	%read{987,987} %write{986,986}
temp	float	$tmp505	%read{1005,1005} %write{995,996}
temp	float	$tmp506	%read{993,995} %write{991,991}
temp	int	$tmp507	%read{994,994} %write{993,993}
temp	float	$tmp508	%read{1005,1005} %write{1002,1003}
temp	float	$tmp509	%read{1000,1002} %write{998,998}
temp	int	$tmp510	%read{1001,1001} %write{1000,1000}
temp	float	$tmp511	%read{1009,1009} %write{1006,1006}
temp	float	$tmp513	%read{1009,1009} %write{1007,1007}
temp	float	$tmp515	%read{1009,1009} %write{1008,1008}
temp	int	$tmp517	%read{1011,1011} %write{1010,1010}
temp	float	$tmp518	%read{1037,1037} %write{1017,1019}
temp	float	$tmp519	%read{1015,1019} %write{1013,1013}
temp	int	$tmp520	%read{1016,1016} %write{1015,1015}
temp	float	$tmp521	%read{1037,1037} %write{1025,1027}
temp	float	$tmp522	%read{1023,1027} %write{1021,1021}
temp	int	$tmp523	%read{1024,1024} %write{1023,1023}
temp	float	$tmp524	%read{1037,1037} %write{1033,1035}
temp	float	$tmp525	%read{1031,1035} %write{1029,1029}
temp	int	$tmp526	%read{1032,1032} %write{1031,1031}
temp	float	$tmp527	%read{1041,1041} %write{1038,1038}
temp	float	$tmp529	%read{1041,1041} %write{1039,1039}
temp	float	$tmp531	%read{1041,1041} %write{1040,1040}
temp	int	$tmp533	%read{1043,1043} %write{1042,1042}
temp	float	$tmp534	%read{1069,1069} %write{1049,1051}
temp	float	$tmp535	%read{1047,1051} %write{1045,1045}
temp	int	$tmp536	%read{1048,1048} %write{1047,1047}
temp	float	$tmp537	%read{1069,1069} %write{1057,1059}
temp	float	$tmp538	%read{1055,1059} %write{1053,1053}
temp	int	$tmp539	%read{1056,1056} %write{1055,1055}
temp	float	$tmp540	%read{1069,1069} %write{1065,1067}
temp	float	$tmp541	%read{1063,1067} %write{1061,1061}
temp	int	$tmp542	%read{1064,1064} %write{1063,1063}
temp	float	$tmp543	%read{1073,1073} %write{1070,1070}
temp	float	$tmp545	%read{1073,1073} %write{1071,1071}
temp	float	$tmp547	%read{1073,1073} %write{1072,1072}
temp	int	$tmp549	%read{1075,1075} %write{1074,1074}
temp	float	$tmp550	%read{1101,1101} %write{1081,1083}
temp	float	$tmp551	%read{1079,1083} %write{1077,1077}
temp	int	$tmp552	%read{1080,1080} %write{1079,1079}
temp	float	$tmp553	%read{1101,1101} %write{1089,1091}
temp	float	$tmp554	%read{1087,1091} %write{1085,1085}
temp	int	$tmp555	%read{1088,1088} %write{1087,1087}
temp	float	$tmp556	%read{1101,1101} %write{1097,1099}
temp	float	$tmp557	%read{1095,1099} %write{1093,1093}
temp	int	$tmp558	%read{1096,1096} %write{1095,1095}
temp	float	$tmp559	%read{1105,1105} %write{1102,1102}
temp	float	$tmp561	%read{1105,1105} %write{1103,1103}
temp	float	$tmp563	%read{1105,1105} %write{1104,1104}
temp	int	$tmp565	%read{1107,1107} %write{1106,1106}
temp	int	$tmp566	%read{1108,1112} %write{1107,1111}
temp	int	$tmp567	%read{1110,1110} %write{1109,1109}
temp	int	$tmp568	%read{1111,1111} %write{1110,1110}
temp	float	$tmp569	%read{1116,1116} %write{1113,1113}
const	vector	$const120	2.1546035 -0.80849606 -0.34610748		%read{1113,1113} %write{2147483647,-1}
temp	float	$tmp571	%read{1116,1116} %write{1114,1114}
const	vector	$const121	-0.17887756 1.2805654 -0.10168786		%read{1114,1114} %write{2147483647,-1}
temp	float	$tmp573	%read{1116,1116} %write{1115,1115}
const	vector	$const122	0.0086234501 -0.06104539 1.0524219		%read{1115,1115} %write{2147483647,-1}
temp	int	$tmp575	%read{1118,1118} %write{1117,1117}
temp	float	$tmp576	%read{1122,1122} %write{1119,1119}
const	vector	$const123	1.4641201 -0.39332703 -0.07079313		%read{1119,1119} %write{2147483647,-1}
temp	float	$tmp578	%read{1122,1122} %write{1120,1120}
const	vector	$const124	-0.066476509 1.0752915 -0.0088150101		%read{1120,1120} %write{2147483647,-1}
temp	float	$tmp580	%read{1122,1122} %write{1121,1121}
const	vector	$const125	-0.00255286 -0.0470296 1.0495825		%read{1121,1121} %write{2147483647,-1}
temp	int	$tmp582	%read{1126,1126} %write{1125,1125}
temp	int	$tmp583	%read{1127,1131} %write{1126,1130}
temp	int	$tmp584	%read{1129,1129} %write{1128,1128}
temp	int	$tmp585	%read{1130,1130} %write{1129,1129}
const	string	$const126	"transform_color_space_to_ACES"		%read{1132,1132} %write{2147483647,-1}
temp	int	$tmp586	%read{1135,1135} %write{1134,1134}
temp	float	$tmp587	%read{1173,1173} %write{1148,1148}
temp	float	$tmp588	%read{1139,1146} %write{1137,1137}
temp	int	$tmp589	%read{1140,1140} %write{1139,1139}
temp	float	$tmp590	%read{1142,1142} %write{1141,1141}
temp	float	$tmp591	%read{1143,1143} %write{1142,1142}
temp	int	$tmp592	%read{1145,1145} %write{1144,1144}
temp	float	$tmp593	%read{1173,1173} %write{1160,1160}
temp	float	$tmp594	%read{1151,1158} %write{1149,1149}
temp	int	$tmp595	%read{1152,1152} %write{1151,1151}
temp	float	$tmp596	%read{1154,1154} %write{1153,1153}
temp	float	$tmp597	%read{1155,1155} %write{1154,1154}
temp	int	$tmp598	%read{1157,1157} %write{1156,1156}
temp	float	$tmp599	%read{1173,1173} %write{1172,1172}
temp	float	$tmp600	%read{1163,1170} %write{1161,1161}
temp	int	$tmp601	%read{1164,1164} %write{1163,1163}
temp	float	$tmp602	%read{1166,1166} %write{1165,1165}
temp	float	$tmp603	%read{1167,1167} %write{1166,1166}
temp	int	$tmp604	%read{1169,1169} %write{1168,1168}
temp	float	$tmp605	%read{1177,1177} %write{1174,1174}
const	vector	$const127	0.43963298 0.38298869 0.17737833		%read{1174,1332} %write{2147483647,-1}
temp	float	$tmp607	%read{1177,1177} %write{1175,1175}
const	vector	$const128	0.089776441 0.81343943 0.09678413		%read{1175,1333} %write{2147483647,-1}
temp	float	$tmp609	%read{1177,1177} %write{1176,1176}
const	vector	$const129	0.01754117 0.11154655 0.87091225		%read{1176,1334} %write{2147483647,-1}
temp	int	$tmp611	%read{1179,1179} %write{1178,1178}
temp	int	$tmp612	%read{1180,1184} %write{1179,1183}
temp	int	$tmp613	%read{1182,1182} %write{1181,1181}
temp	int	$tmp614	%read{1183,1183} %write{1182,1182}
temp	float	$tmp615	%read{1188,1188} %write{1185,1185}
temp	float	$tmp617	%read{1188,1188} %write{1186,1186}
temp	float	$tmp619	%read{1188,1188} %write{1187,1187}
temp	int	$tmp621	%read{1190,1190} %write{1189,1189}
temp	int	$tmp622	%read{1191,1195} %write{1190,1194}
temp	int	$tmp623	%read{1193,1193} %write{1192,1192}
temp	int	$tmp624	%read{1194,1194} %write{1193,1193}
temp	float	$tmp625	%read{1199,1199} %write{1196,1196}
const	vector	$const130	0.67908561 0.15770091 0.16321345		%read{1196,1196} %write{2147483647,-1}
temp	float	$tmp627	%read{1199,1199} %write{1197,1197}
const	vector	$const131	0.046002001 0.85905468 0.094943322		%read{1197,1197} %write{2147483647,-1}
temp	float	$tmp629	%read{1199,1199} %write{1198,1198}
const	vector	$const132	-0.00057393999 0.028467771 0.97210616		%read{1198,1198} %write{2147483647,-1}
temp	int	$tmp631	%read{1201,1201} %write{1200,1200}
temp	int	$tmp632	%read{1202,1206} %write{1201,1205}
temp	int	$tmp633	%read{1204,1204} %write{1203,1203}
temp	int	$tmp634	%read{1205,1205} %write{1204,1204}
temp	float	$tmp635	%read{1210,1210} %write{1207,1207}
const	vector	$const133	0.48978665 0.31837603 0.19183731		%read{1207,1207} %write{2147483647,-1}
temp	float	$tmp637	%read{1210,1210} %write{1208,1208}
const	vector	$const134	0.068412952 0.82898909 0.10259797		%read{1208,1208} %write{2147483647,-1}
temp	float	$tmp639	%read{1210,1210} %write{1209,1209}
const	vector	$const135	-4.5000001e-05 0.045476489 0.95456851		%read{1209,1209} %write{2147483647,-1}
temp	int	$tmp641	%read{1212,1212} %write{1211,1211}
temp	float	$tmp642	%read{1235,1235} %write{1218,1219}
temp	float	$tmp643	%read{1216,1218} %write{1214,1214}
temp	int	$tmp644	%read{1217,1217} %write{1216,1216}
temp	float	$tmp645	%read{1235,1235} %write{1225,1226}
temp	float	$tmp646	%read{1223,1225} %write{1221,1221}
temp	int	$tmp647	%read{1224,1224} %write{1223,1223}
temp	float	$tmp648	%read{1235,1235} %write{1232,1233}
temp	float	$tmp649	%read{1230,1232} %write{1228,1228}
temp	int	$tmp650	%read{1231,1231} %write{1230,1230}
temp	float	$tmp651	%read{1239,1239} %write{1236,1236}
temp	float	$tmp653	%read{1239,1239} %write{1237,1237}
temp	float	$tmp655	%read{1239,1239} %write{1238,1238}
temp	int	$tmp657	%read{1241,1241} %write{1240,1240}
temp	float	$tmp658	%read{1267,1267} %write{1247,1249}
temp	float	$tmp659	%read{1245,1249} %write{1243,1243}
temp	int	$tmp660	%read{1246,1246} %write{1245,1245}
temp	float	$tmp661	%read{1267,1267} %write{1255,1257}
temp	float	$tmp662	%read{1253,1257} %write{1251,1251}
temp	int	$tmp663	%read{1254,1254} %write{1253,1253}
temp	float	$tmp664	%read{1267,1267} %write{1263,1265}
temp	float	$tmp665	%read{1261,1265} %write{1259,1259}
temp	int	$tmp666	%read{1262,1262} %write{1261,1261}
temp	float	$tmp667	%read{1271,1271} %write{1268,1268}
temp	float	$tmp669	%read{1271,1271} %write{1269,1269}
temp	float	$tmp671	%read{1271,1271} %write{1270,1270}
temp	int	$tmp673	%read{1273,1273} %write{1272,1272}
temp	float	$tmp674	%read{1299,1299} %write{1279,1281}
temp	float	$tmp675	%read{1277,1281} %write{1275,1275}
temp	int	$tmp676	%read{1278,1278} %write{1277,1277}
temp	float	$tmp677	%read{1299,1299} %write{1287,1289}
temp	float	$tmp678	%read{1285,1289} %write{1283,1283}
temp	int	$tmp679	%read{1286,1286} %write{1285,1285}
temp	float	$tmp680	%read{1299,1299} %write{1295,1297}
temp	float	$tmp681	%read{1293,1297} %write{1291,1291}
temp	int	$tmp682	%read{1294,1294} %write{1293,1293}
temp	float	$tmp683	%read{1303,1303} %write{1300,1300}
temp	float	$tmp685	%read{1303,1303} %write{1301,1301}
temp	float	$tmp687	%read{1303,1303} %write{1302,1302}
temp	int	$tmp689	%read{1305,1305} %write{1304,1304}
temp	float	$tmp690	%read{1331,1331} %write{1311,1313}
temp	float	$tmp691	%read{1309,1313} %write{1307,1307}
temp	int	$tmp692	%read{1310,1310} %write{1309,1309}
temp	float	$tmp693	%read{1331,1331} %write{1319,1321}
temp	float	$tmp694	%read{1317,1321} %write{1315,1315}
temp	int	$tmp695	%read{1318,1318} %write{1317,1317}
temp	float	$tmp696	%read{1331,1331} %write{1327,1329}
temp	float	$tmp697	%read{1325,1329} %write{1323,1323}
temp	int	$tmp698	%read{1326,1326} %write{1325,1325}
temp	float	$tmp699	%read{1335,1335} %write{1332,1332}
temp	float	$tmp701	%read{1335,1335} %write{1333,1333}
temp	float	$tmp703	%read{1335,1335} %write{1334,1334}
temp	int	$tmp705	%read{1337,1337} %write{1336,1336}
temp	int	$tmp706	%read{1338,1342} %write{1337,1341}
temp	int	$tmp707	%read{1340,1340} %write{1339,1339}
temp	int	$tmp708	%read{1341,1341} %write{1340,1340}
temp	int	$tmp709	%read{1345,1345} %write{1344,1344}
temp	float	$tmp710	%read{1349,1349} %write{1346,1346}
const	vector	$const136	0.69545221 0.1406787 0.16386905		%read{1346,1346} %write{2147483647,-1}
temp	float	$tmp712	%read{1349,1349} %write{1347,1347}
const	vector	$const137	0.044794559 0.85967112 0.095534317		%read{1347,1347} %write{2147483647,-1}
temp	float	$tmp714	%read{1349,1349} %write{1348,1348}
const	vector	$const138	-0.00552588 0.0040252102 1.0015007		%read{1348,1348} %write{2147483647,-1}
temp	int	$tmp716	%read{1353,1353} %write{1352,1352}
const	string	$const139	"transform_color_space_to_ACEScg"		%read{1354,1354} %write{2147483647,-1}
temp	int	$tmp717	%read{1357,1357} %write{1356,1356}
temp	float	$tmp718	%read{1395,1395} %write{1370,1370}
temp	float	$tmp719	%read{1361,1368} %write{1359,1359}
temp	int	$tmp720	%read{1362,1362} %write{1361,1361}
temp	float	$tmp721	%read{1364,1364} %write{1363,1363}
temp	float	$tmp722	%read{1365,1365} %write{1364,1364}
temp	int	$tmp723	%read{1367,1367} %write{1366,1366}
temp	float	$tmp724	%read{1395,1395} %write{1382,1382}
temp	float	$tmp725	%read{1373,1380} %write{1371,1371}
temp	int	$tmp726	%read{1374,1374} %write{1373,1373}
temp	float	$tmp727	%read{1376,1376} %write{1375,1375}
temp	float	$tmp728	%read{1377,1377} %write{1376,1376}
temp	int	$tmp729	%read{1379,1379} %write{1378,1378}
temp	float	$tmp730	%read{1395,1395} %write{1394,1394}
temp	float	$tmp731	%read{1385,1392} %write{1383,1383}
temp	int	$tmp732	%read{1386,1386} %write{1385,1385}
temp	float	$tmp733	%read{1388,1388} %write{1387,1387}
temp	float	$tmp734	%read{1389,1389} %write{1388,1388}
temp	int	$tmp735	%read{1391,1391} %write{1390,1390}
temp	float	$tmp736	%read{1399,1399} %write{1396,1396}
const	vector	$const140	0.61309743 0.33952314 0.047379449		%read{1396,1554} %write{2147483647,-1}
temp	float	$tmp738	%read{1399,1399} %write{1397,1397}
const	vector	$const141	0.070193723 0.91635388 0.0134524		%read{1397,1555} %write{2147483647,-1}
temp	float	$tmp740	%read{1399,1399} %write{1398,1398}
const	vector	$const142	0.020615591 0.10956977 0.86981463		%read{1398,1556} %write{2147483647,-1}
temp	int	$tmp742	%read{1401,1401} %write{1400,1400}
temp	int	$tmp743	%read{1402,1406} %write{1401,1405}
temp	int	$tmp744	%read{1404,1404} %write{1403,1403}
temp	int	$tmp745	%read{1405,1405} %write{1404,1404}
temp	float	$tmp746	%read{1410,1410} %write{1407,1407}
temp	float	$tmp748	%read{1410,1410} %write{1408,1408}
temp	float	$tmp750	%read{1410,1410} %write{1409,1409}
temp	int	$tmp752	%read{1412,1412} %write{1411,1411}
temp	int	$tmp753	%read{1413,1417} %write{1412,1416}
temp	int	$tmp754	%read{1415,1415} %write{1414,1414}
temp	int	$tmp755	%read{1416,1416} %write{1415,1415}
temp	float	$tmp756	%read{1421,1421} %write{1418,1418}
const	vector	$const143	0.974895 0.01959911 0.0055059101		%read{1418,1418} %write{2147483647,-1}
temp	float	$tmp758	%read{1421,1421} %write{1419,1419}
const	vector	$const144	0.00217956 0.99553549 0.0022849699		%read{1419,1419} %write{2147483647,-1}
temp	float	$tmp760	%read{1421,1421} %write{1420,1420}
const	vector	$const145	0.0047972398 0.02453202 0.97067076		%read{1420,1420} %write{2147483647,-1}
temp	int	$tmp762	%read{1423,1423} %write{1422,1422}
temp	int	$tmp763	%read{1424,1428} %write{1423,1427}
temp	int	$tmp764	%read{1426,1426} %write{1425,1425}
temp	int	$tmp765	%read{1427,1427} %write{1426,1426}
temp	float	$tmp766	%read{1432,1432} %write{1429,1429}
const	vector	$const146	0.69472486 0.25626448 0.049010649		%read{1429,1429} %write{2147483647,-1}
temp	float	$tmp768	%read{1432,1432} %write{1430,1430}
const	vector	$const147	0.042978819 0.94617575 0.01084541		%read{1430,1430} %write{2147483647,-1}
temp	float	$tmp770	%read{1432,1432} %write{1431,1431}
const	vector	$const148	0.00361555 0.04301947 0.95336497		%read{1431,1431} %write{2147483647,-1}
temp	int	$tmp772	%read{1434,1434} %write{1433,1433}
temp	float	$tmp773	%read{1457,1457} %write{1440,1441}
temp	float	$tmp774	%read{1438,1440} %write{1436,1436}
temp	int	$tmp775	%read{1439,1439} %write{1438,1438}
temp	float	$tmp776	%read{1457,1457} %write{1447,1448}
temp	float	$tmp777	%read{1445,1447} %write{1443,1443}
temp	int	$tmp778	%read{1446,1446} %write{1445,1445}
temp	float	$tmp779	%read{1457,1457} %write{1454,1455}
temp	float	$tmp780	%read{1452,1454} %write{1450,1450}
temp	int	$tmp781	%read{1453,1453} %write{1452,1452}
temp	float	$tmp782	%read{1461,1461} %write{1458,1458}
temp	float	$tmp784	%read{1461,1461} %write{1459,1459}
temp	float	$tmp786	%read{1461,1461} %write{1460,1460}
temp	int	$tmp788	%read{1463,1463} %write{1462,1462}
temp	float	$tmp789	%read{1489,1489} %write{1469,1471}
temp	float	$tmp790	%read{1467,1471} %write{1465,1465}
temp	int	$tmp791	%read{1468,1468} %write{1467,1467}
temp	float	$tmp792	%read{1489,1489} %write{1477,1479}
temp	float	$tmp793	%read{1475,1479} %write{1473,1473}
temp	int	$tmp794	%read{1476,1476} %write{1475,1475}
temp	float	$tmp795	%read{1489,1489} %write{1485,1487}
temp	float	$tmp796	%read{1483,1487} %write{1481,1481}
temp	int	$tmp797	%read{1484,1484} %write{1483,1483}
temp	float	$tmp798	%read{1493,1493} %write{1490,1490}
temp	float	$tmp800	%read{1493,1493} %write{1491,1491}
temp	float	$tmp802	%read{1493,1493} %write{1492,1492}
temp	int	$tmp804	%read{1495,1495} %write{1494,1494}
temp	float	$tmp805	%read{1521,1521} %write{1501,1503}
temp	float	$tmp806	%read{1499,1503} %write{1497,1497}
temp	int	$tmp807	%read{1500,1500} %write{1499,1499}
temp	float	$tmp808	%read{1521,1521} %write{1509,1511}
temp	float	$tmp809	%read{1507,1511} %write{1505,1505}
temp	int	$tmp810	%read{1508,1508} %write{1507,1507}
temp	float	$tmp811	%read{1521,1521} %write{1517,1519}
temp	float	$tmp812	%read{1515,1519} %write{1513,1513}
temp	int	$tmp813	%read{1516,1516} %write{1515,1515}
temp	float	$tmp814	%read{1525,1525} %write{1522,1522}
temp	float	$tmp816	%read{1525,1525} %write{1523,1523}
temp	float	$tmp818	%read{1525,1525} %write{1524,1524}
temp	int	$tmp820	%read{1527,1527} %write{1526,1526}
temp	float	$tmp821	%read{1553,1553} %write{1533,1535}
temp	float	$tmp822	%read{1531,1535} %write{1529,1529}
temp	int	$tmp823	%read{1532,1532} %write{1531,1531}
temp	float	$tmp824	%read{1553,1553} %write{1541,1543}
temp	float	$tmp825	%read{1539,1543} %write{1537,1537}
temp	int	$tmp826	%read{1540,1540} %write{1539,1539}
temp	float	$tmp827	%read{1553,1553} %write{1549,1551}
temp	float	$tmp828	%read{1547,1551} %write{1545,1545}
temp	int	$tmp829	%read{1548,1548} %write{1547,1547}
temp	float	$tmp830	%read{1557,1557} %write{1554,1554}
temp	float	$tmp832	%read{1557,1557} %write{1555,1555}
temp	float	$tmp834	%read{1557,1557} %write{1556,1556}
temp	int	$tmp836	%read{1559,1559} %write{1558,1558}
temp	int	$tmp837	%read{1560,1564} %write{1559,1563}
temp	int	$tmp838	%read{1562,1562} %write{1561,1561}
temp	int	$tmp839	%read{1563,1563} %write{1562,1562}
temp	float	$tmp840	%read{1568,1568} %write{1565,1565}
const	vector	$const149	1.4514393 -0.23651075 -0.21492857		%read{1565,1565} %write{2147483647,-1}
temp	float	$tmp842	%read{1568,1568} %write{1566,1566}
const	vector	$const150	-0.076553769 1.1762297 -0.099675931		%read{1566,1566} %write{2147483647,-1}
temp	float	$tmp844	%read{1568,1568} %write{1567,1567}
const	vector	$const151	0.0083161499 -0.0060324501 0.99771631		%read{1567,1567} %write{2147483647,-1}
temp	int	$tmp846	%read{1570,1570} %write{1569,1569}
const	string	$const152	"as_luminance"		%read{1577,1577} %write{2147483647,-1}
const	string	$const153	"Rec.601"		%read{1578,1578} %write{2147483647,-1}
temp	int	$tmp847	%read{1579,1579} %write{1578,1578}
const	color	$const154	0.22200431 0.70665479 0.071340919		%read{1580,1580} %write{2147483647,-1}
const	string	$const155	"Rec.709"		%read{1581,1581} %write{2147483647,-1}
temp	int	$tmp848	%read{1582,1582} %write{1581,1581}
temp	int	$tmp849	%read{1583,1587} %write{1582,1586}
temp	int	$tmp850	%read{1585,1585} %write{1584,1584}
temp	int	$tmp851	%read{1586,1586} %write{1585,1585}
temp	int	$tmp852	%read{1588,1592} %write{1587,1591}
temp	int	$tmp853	%read{1590,1590} %write{1589,1589}
temp	int	$tmp854	%read{1591,1591} %write{1590,1590}
const	color	$const156	0.212639 0.71516865 0.072192319		%read{1593,1593} %write{2147483647,-1}
const	string	$const157	"AdobeRGB"		%read{1594,1594} %write{2147483647,-1}
temp	int	$tmp855	%read{1595,1595} %write{1594,1594}
const	color	$const158	0.29734001 0.62735999 0.075290002		%read{1596,1596} %write{2147483647,-1}
temp	int	$tmp856	%read{1598,1598} %write{1597,1597}
const	color	$const159	0.2627002 0.67799807 0.059301719		%read{1599,1599} %write{2147483647,-1}
temp	int	$tmp857	%read{1601,1601} %write{1600,1600}
const	color	$const160	0.34396645 0.7281661 -0.07213255		%read{1602,1605} %write{2147483647,-1}
temp	int	$tmp858	%read{1604,1604} %write{1603,1603}
temp	int	$tmp859	%read{1607,1607} %write{1606,1606}
const	color	$const161	0.20949169 0.72159523 0.068913072		%read{1608,1608} %write{2147483647,-1}
temp	float	$tmp860	%read{1612,1612} %write{1610,1610}
temp	float	$tmp861	%read{1612,1612} %write{1611,1611}
temp	float	$tmp862	%read{1616,1616} %write{1612,1612}
temp	float	$tmp863	%read{1615,1615} %write{1613,1613}
temp	float	$tmp864	%read{1615,1615} %write{1614,1614}
temp	float	$tmp865	%read{1616,1616} %write{1615,1615}
temp	float	$tmp866	%read{1620,1620} %write{1616,1616}
temp	float	$tmp867	%read{1619,1619} %write{1617,1617}
temp	float	$tmp868	%read{1619,1619} %write{1618,1618}
temp	float	$tmp869	%read{1620,1620} %write{1619,1619}
temp	float	$tmp870	%read{1623,1623} %write{1621,1621}
temp	float	$tmp871	%read{1623,1623} %write{1622,1622}
temp	float	$tmp872	%read{1625,1625} %write{1623,1623}
temp	float	$tmp873	%read{1625,1625} %write{1624,1624}
temp	float	$tmp874	%read{1626,1626} %write{1625,1625}
const	float	$const162	3		%read{1626,1626} %write{2147483647,-1}
code in_texture_coords
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:266
#     ]],
	aassign		in_texture_coords $const1 u 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{266} %argrw{"wrr"}
	aassign		in_texture_coords $const2 v 	%argrw{"wrr"}
code ___main___
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:298
#     if (in_filename == "")
	eq		$tmp1 in_filename $const3 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{298} %argrw{"wrr"}
	if		$tmp1 5 10 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:300
#         return;
	exit	%line{300}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:304
#         int valid_file = 0;
	assign		___734_valid_file $const1 	%line{304} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:305
#         gettextureinfo(in_filename, "exists", valid_file);
	gettextureinfo	$tmp2 in_filename $const4 ___734_valid_file 	%line{305} %argrw{"wrrw"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:307
#         if (!valid_file)
	eq		$tmp3 ___734_valid_file $const1 	%line{307} %argrw{"wrr"}
	if		$tmp3 10 10 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:309
#             return;
	exit	%line{309}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:313
#     string wrap_mode[2], texname = in_filename;
	assign		texname in_filename 	%line{313} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:316
#     if (in_atlas_type == 0)
	eq		$tmp4 in_atlas_type $const1 	%line{316} %argrw{"wrr"}
	if		$tmp4 68 124 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:318
#         uv_coords[0] = mod(in_texture_coords[0], UVWRAP);
	aref		$tmp6 in_texture_coords $const1 	%line{318} %argrw{"wrr"}
	functioncall	$const6 19 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp8 $tmp6 $const5 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 $const5 $tmp7 	%argrw{"wrr"}
	sub		$tmp5 $tmp6 $tmp9 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:318
#         string help = "Use the wrapping mode set on the texture, or override it.",
	aassign		uv_coords $const1 $tmp5 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{318} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:319
#         int divider = 1
	aref		$tmp11 in_texture_coords $const2 	%line{319} %argrw{"wrr"}
	functioncall	$const6 26 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp13 $tmp11 $const5 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp12 $tmp13 	%argrw{"wr"}
	mul		$tmp14 $const5 $tmp12 	%argrw{"wrr"}
	sub		$tmp10 $tmp11 $tmp14 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:319
#         int divider = 1
	aassign		uv_coords $const2 $tmp10 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{319} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:321
#     int in_interpolation_method = 0
	functioncall	$const7 68 	%line{321} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:70
#     mode[0] = get_wrap_mode(wrap_smode);
	functioncall	$const8 47 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h"} %line{70} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:35
#     if (wrap_mode == 0)
	eq		$tmp16 in_s_wrap $const1 	%line{35} %argrw{"wrr"}
	if		$tmp16 33 47 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:37
#         return "default";
	assign		$tmp15 $const9 	%line{37} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:39
#     else if (wrap_mode == 1)
	eq		$tmp17 in_s_wrap $const2 	%line{39} %argrw{"wrr"}
	if		$tmp17 37 47 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:41
#         return "black";
	assign		$tmp15 $const10 	%line{41} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:43
#     else if (wrap_mode == 2)
	eq		$tmp18 in_s_wrap $const11 	%line{43} %argrw{"wrr"}
	if		$tmp18 41 47 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:45
#         return "periodic";
	assign		$tmp15 $const12 	%line{45} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:47
#     else if (wrap_mode == 3)
	eq		$tmp19 in_s_wrap $const13 	%line{47} %argrw{"wrr"}
	if		$tmp19 45 47 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:49
#         return "clamp";
	assign		$tmp15 $const14 	%line{49} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:53
#         return "mirror";
	assign		$tmp15 $const15 	%line{53} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:70
#     mode[0] = get_wrap_mode(wrap_smode);
	aassign		wrap_mode $const1 $tmp15 	%line{70} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:71
#     mode[1] = get_wrap_mode(wrap_tmode);
	functioncall	$const8 67 	%line{71} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:35
#     if (wrap_mode == 0)
	eq		$tmp21 in_t_wrap $const1 	%line{35} %argrw{"wrr"}
	if		$tmp21 53 67 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:37
#         return "default";
	assign		$tmp20 $const9 	%line{37} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:39
#     else if (wrap_mode == 1)
	eq		$tmp22 in_t_wrap $const2 	%line{39} %argrw{"wrr"}
	if		$tmp22 57 67 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:41
#         return "black";
	assign		$tmp20 $const10 	%line{41} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:43
#     else if (wrap_mode == 2)
	eq		$tmp23 in_t_wrap $const11 	%line{43} %argrw{"wrr"}
	if		$tmp23 61 67 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:45
#         return "periodic";
	assign		$tmp20 $const12 	%line{45} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:47
#     else if (wrap_mode == 3)
	eq		$tmp24 in_t_wrap $const13 	%line{47} %argrw{"wrr"}
	if		$tmp24 65 67 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:49
#         return "clamp";
	assign		$tmp20 $const14 	%line{49} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:53
#         return "mirror";
	assign		$tmp20 $const15 	%line{53} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:71
#     mode[1] = get_wrap_mode(wrap_tmode);
	aassign		wrap_mode $const2 $tmp20 	%line{71} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:325
#         int as_maya_attribute_keyable = 0,
	aassign		uv_coords $const1 u 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{325} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:326
#         int as_maya_attribute_hidden = 1,
	aassign		uv_coords $const2 v 	%line{326} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:327
#         int as_blender_input_socket = 0,
	aassign		wrap_mode $const1 $const9 	%line{327} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:328
#         int gafferNoduleLayoutVisible = 0,
	aassign		wrap_mode $const2 $const9 	%line{328} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:351
#         string widget = "null"
	eq		$tmp25 in_atlas_type $const2 	%line{351} %argrw{"wrr"}
	if		$tmp25 85 124 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:355
#         string as_maya_attribute_name = "outAlpha",
	regex_search	$tmp26 in_filename ___738_match $const16 	%line{355} %argrw{"wrrr"}
	if		$tmp26 85 85 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:358
#         string widget = "null"
	aref		$tmp28 ___738_match $const1 	%line{358} %argrw{"wrr"}
	substr		$tmp27 in_filename $const1 $tmp28 	%argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:360
#     output float out_channel = 0.0
	aref		$tmp30 ___738_match $const2 	%line{360} %argrw{"wrr"}
	functioncall	$const18 82 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:524
# color  mix (color  x, color  y, color  a) BUILTIN;
	strlen		$tmp31 in_filename 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{524} %argrw{"wr"}
	substr		$tmp29 in_filename $tmp30 $tmp31 	%argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:360
#                     substr(in_filename, match[1]));
	functioncall	$const19 85 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{360} %argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:530
# 
	concat		$tmp32 $tmp27 $const17 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{530} %argrw{"wrr"}
	concat		texname $tmp32 $tmp29 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:363
#         else if (in_atlas_type == 2)
	eq		$tmp33 in_atlas_type $const11 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{363} %argrw{"wrr"}
	if		$tmp33 98 124 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:367
#             if (regex_search(in_filename, match, "_u[0-9]{1}_v[0-9]{1}"))
	regex_search	$tmp34 in_filename ___740_match $const16 	%line{367} %argrw{"wrrr"}
	if		$tmp34 98 98 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:370
#                     substr(in_filename, 0, match[0]),
	aref		$tmp36 ___740_match $const1 	%line{370} %argrw{"wrr"}
	substr		$tmp35 in_filename $const1 $tmp36 	%argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:372
#                     substr(in_filename, match[1]));
	aref		$tmp38 ___740_match $const2 	%line{372} %argrw{"wrr"}
	functioncall	$const18 95 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:524
# point  mix (point  x, point  y, point  a) { return x*(1-a) + y*a; }
	strlen		$tmp39 in_filename 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{524} %argrw{"wr"}
	substr		$tmp37 in_filename $tmp38 $tmp39 	%argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:372
#                     substr(in_filename, match[1]));
	functioncall	$const19 98 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{372} %argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h:530
# normal mix (normal x, normal y, normal a) BUILTIN;
	concat		$tmp40 $tmp35 $const20 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\stdosl.h"} %line{530} %argrw{"wrr"}
	concat		texname $tmp40 $tmp37 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:375
#         else if (in_atlas_type == 3)
	eq		$tmp41 in_atlas_type $const13 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{375} %argrw{"wrr"}
	if		$tmp41 124 124 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:377
#             string results[20], texname = "";
	assign		___742_texname $const3 	%line{377} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:378
#             int nums = split(in_filename, results, "."), found_tiles = 0;
	split		___742_nums in_filename ___742_results $const21 	%line{378} %argrw{"wrwr"}
	assign		___742_found_tiles $const1 	%argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:380
#             for (int i = 0; i < nums; ++i)
	for		$tmp42 105 106 123 124 	%line{380} %argrw{"r"}
	assign		___743_i $const1 	%argrw{"wr"}
	lt		$tmp42 ___743_i ___742_nums 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:382
#                 if (!found_tiles && regex_search(results[i], "^[0-9]{4}"))
	eq		$tmp43 ___742_found_tiles $const1 	%line{382} %argrw{"wrr"}
	neq		$tmp44 $tmp43 $const1 	%argrw{"wrr"}
	if		$tmp44 113 113 	%argrw{"r"}
	aref		$tmp46 ___742_results ___743_i 	%argrw{"wrr"}
	regex_search	$tmp45 $tmp46 $const22 	%argrw{"wrr"}
	neq		$tmp47 $tmp45 $const1 	%argrw{"wrr"}
	assign		$tmp44 $tmp47 	%argrw{"wr"}
	if		$tmp44 116 116 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:384
#                     results[i] = "<UDIM>";
	aassign		___742_results ___743_i $const23 	%line{384} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:385
#                     found_tiles = 1;
	assign		___742_found_tiles $const2 	%line{385} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:387
#                 texname = concat(texname, results[i]);
	aref		$tmp48 ___742_results ___743_i 	%line{387} %argrw{"wrr"}
	concat		___742_texname ___742_texname $tmp48 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:389
#                 if (i < nums - 1)
	sub		$tmp49 ___742_nums $const2 	%line{389} %argrw{"wrr"}
	lt		$tmp50 ___743_i $tmp49 	%argrw{"wrr"}
	if		$tmp50 123 123 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:391
#                     texname = concat(texname, results[i]);
	aref		$tmp51 ___742_results ___743_i 	%line{391} %argrw{"wrr"}
	concat		___742_texname ___742_texname $tmp51 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:380
#             for (int i = 0; i < nums; ++i)
	add		___743_i ___743_i $const2 	%line{380} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:407
#     gettextureinfo(in_filename, "channels", numchannels);
	gettextureinfo	$tmp52 in_filename $const24 numchannels 	%line{407} %argrw{"wrrw"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:409
#     if (numchannels == 1)
	eq		$tmp53 numchannels $const2 	%line{409} %argrw{"wrr"}
	if		$tmp53 148 1627 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:413
#             uv_coords[0],
	aref		$tmp54 uv_coords $const1 	%line{413} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:414
#             uv_coords[1],
	aref		$tmp55 uv_coords $const2 	%line{414} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:419
#             "swrap", wrap_mode[0],
	aref		$tmp56 wrap_mode $const1 	%line{419} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:420
#             "twrap", wrap_mode[1],
	aref		$tmp57 wrap_mode $const2 	%line{420} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:421
#             "interp", get_interpolation_method(in_interpolation_method));
	functioncall	$const32 146 	%line{421} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:96
#     if (method == 0)
	eq		$tmp59 in_interpolation_method $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h"} %line{96} %argrw{"wrr"}
	if		$tmp59 136 146 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:98
#         return "smartcubic";
	assign		$tmp58 $const33 	%line{98} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:100
#     else if (method == 1)
	eq		$tmp60 in_interpolation_method $const2 	%line{100} %argrw{"wrr"}
	if		$tmp60 140 146 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:102
#         return "cubic";
	assign		$tmp58 $const34 	%line{102} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:104
#     else if (method == 2)
	eq		$tmp61 in_interpolation_method $const11 	%line{104} %argrw{"wrr"}
	if		$tmp61 144 146 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:106
#         return "linear";
	assign		$tmp58 $const35 	%line{106} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:110
#         return "closest";
	assign		$tmp58 $const36 	%line{110} %argrw{"wr"}
	return
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:421
#     }
	texture		out_channel texname $tmp54 $tmp55 $const25 in_s_blur_amount $const26 in_t_blur_amount $const27 in_s_filter_width $const28 in_t_filter_width $const29 $tmp56 $const30 $tmp57 $const31 $tmp58 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{421} %argrw{"wrrrrrrrrrrrrrrrrr"} %argderivs{2,3}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:423
#     string wrap_mode[2], texname = in_filename;
	assign		out_color out_channel 	%line{423} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:429
#         uv_coords[1] = mod(in_texture_coords[1], UVWRAP);
	aref		$tmp62 uv_coords $const1 	%line{429} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:430
#         
	aref		$tmp63 uv_coords $const2 	%line{430} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:435
#         uv_coords[0] = u;
	aref		$tmp64 wrap_mode $const1 	%line{435} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:436
#         uv_coords[1] = v;        
	aref		$tmp65 wrap_mode $const2 	%line{436} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:440
#         //
	functioncall	$const32 167 	%line{440} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:96
#     if (method == 0)
	eq		$tmp67 in_interpolation_method $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h"} %line{96} %argrw{"wrr"}
	if		$tmp67 157 167 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:98
#         return "smartcubic";
	assign		$tmp66 $const33 	%line{98} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:100
#     else if (method == 1)
	eq		$tmp68 in_interpolation_method $const2 	%line{100} %argrw{"wrr"}
	if		$tmp68 161 167 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:102
#         return "cubic";
	assign		$tmp66 $const34 	%line{102} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:104
#     else if (method == 2)
	eq		$tmp69 in_interpolation_method $const11 	%line{104} %argrw{"wrr"}
	if		$tmp69 165 167 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:106
#         return "linear";
	assign		$tmp66 $const35 	%line{106} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\texture\\as_texture_helpers.h:110
#         return "closest";
	assign		$tmp66 $const36 	%line{110} %argrw{"wr"}
	return
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:440
#         //
	texture		out_color texname $tmp62 $tmp63 $const25 in_s_blur_amount $const26 in_t_blur_amount $const27 in_s_filter_width $const28 in_t_filter_width $const29 $tmp64 $const30 $tmp65 $const37 in_color $const38 in_alpha $const39 out_alpha $const31 $tmp66 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{440} %argrw{"wrrrrrrrrrrrrrrrrrrrrwrr"} %argderivs{2,3}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:442
#         //
	neq		$tmp70 in_enable_cms $const1 	%line{442} %argrw{"wrr"}
	if		$tmp70 179 179 	%argrw{"r"}
	functioncall	$const40 176 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp72 out_color $const1 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp74 out_color $const2 	%argrw{"wrr"}
	compref		$tmp75 out_color $const11 	%argrw{"wrr"}
	max		$tmp73 $tmp74 $tmp75 	%argrw{"wrr"}
	max		$tmp71 $tmp72 $tmp73 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:442
#             }
	gt		$tmp76 $tmp71 $const41 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{442} %argrw{"wrr"}
	neq		$tmp77 $tmp76 $const1 	%argrw{"wrr"}
	assign		$tmp70 $tmp77 	%argrw{"wr"}
	if		$tmp70 1621 1627 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:444
#         else
	assign		___750_linearized_color $const42 	%line{444} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:446
# #ifdef DEBUG
	eq		$tmp78 in_eotf $const1 	%line{446} %argrw{"wrr"}
	if		$tmp78 184 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:448
#             getattribute("shader:shadername", shadername);
	assign		___750_linearized_color out_color 	%line{448} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:450
#                     shadername, __FILE__, __LINE__);
	eq		$tmp79 in_eotf $const2 	%line{450} %argrw{"wrr"}
	if		$tmp79 224 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:452
#         }
	functioncall	$const43 224 	%line{452} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
#         sRGB_EOTF(value[0]),
	compref		$tmp81 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 199 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp82 $tmp81 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp82 194 198 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp83 $tmp81 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp84 $tmp83 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp84 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp85 $tmp81 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp85 197 198 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp81 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp80 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp87 out_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 211 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp88 $tmp87 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp88 206 210 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp89 $tmp87 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp90 $tmp89 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp90 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp91 $tmp87 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp91 209 210 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp87 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp86 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp93 out_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 223 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp94 $tmp93 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp94 218 222 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp95 $tmp93 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp96 $tmp95 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp96 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp97 $tmp93 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp97 221 222 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp93 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp92 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___750_linearized_color $tmp80 $tmp86 $tmp92 	%line{93} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:454
#             }
	eq		$tmp98 in_eotf $const11 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{454} %argrw{"wrr"}
	if		$tmp98 271 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:456
#         else if (in_atlas_type == 2)
	functioncall	$const49 270 	%line{456} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:154
#         Rec709_EOTF(value[0]),
	compref		$tmp101 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{154} %argrw{"wrr"}
	functioncall	$const49 241 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:117
#     if (value > 0.081)
	gt		$tmp102 $tmp101 $const50 	%line{117} %argrw{"wrr"}
	if		$tmp102 235 240 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:119
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp103 $tmp101 $const51 	%line{119} %argrw{"wrr"}
	div		$tmp104 $tmp103 $const52 	%argrw{"wrr"}
	div		$tmp105 $const54 $const53 	%argrw{"wrr"}
	pow		___373_linear_out $tmp104 $tmp105 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:121
#     else if (value > 0)
	gt		$tmp106 $tmp101 $const1 	%line{121} %argrw{"wrr"}
	if		$tmp106 239 240 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:123
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp107 $const54 $const55 	%line{123} %argrw{"wrr"}
	mul		___373_linear_out $tmp107 $tmp101 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:127
#         linear_out = 0;
	assign		___373_linear_out $const1 	%line{127} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:129
#     return linear_out;
	assign		$tmp100 ___373_linear_out 	%line{129} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:155
#         Rec709_EOTF(value[1]),
	compref		$tmp109 out_color $const2 	%line{155} %argrw{"wrr"}
	functioncall	$const49 255 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:117
#     if (value > 0.081)
	gt		$tmp110 $tmp109 $const50 	%line{117} %argrw{"wrr"}
	if		$tmp110 249 254 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:119
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp111 $tmp109 $const51 	%line{119} %argrw{"wrr"}
	div		$tmp112 $tmp111 $const52 	%argrw{"wrr"}
	div		$tmp113 $const54 $const53 	%argrw{"wrr"}
	pow		___373_linear_out $tmp112 $tmp113 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:121
#     else if (value > 0)
	gt		$tmp114 $tmp109 $const1 	%line{121} %argrw{"wrr"}
	if		$tmp114 253 254 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:123
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp115 $const54 $const55 	%line{123} %argrw{"wrr"}
	mul		___373_linear_out $tmp115 $tmp109 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:127
#         linear_out = 0;
	assign		___373_linear_out $const1 	%line{127} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:129
#     return linear_out;
	assign		$tmp108 ___373_linear_out 	%line{129} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	compref		$tmp117 out_color $const11 	%line{156} %argrw{"wrr"}
	functioncall	$const49 269 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:117
#     if (value > 0.081)
	gt		$tmp118 $tmp117 $const50 	%line{117} %argrw{"wrr"}
	if		$tmp118 263 268 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:119
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp119 $tmp117 $const51 	%line{119} %argrw{"wrr"}
	div		$tmp120 $tmp119 $const52 	%argrw{"wrr"}
	div		$tmp121 $const54 $const53 	%argrw{"wrr"}
	pow		___373_linear_out $tmp120 $tmp121 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:121
#     else if (value > 0)
	gt		$tmp122 $tmp117 $const1 	%line{121} %argrw{"wrr"}
	if		$tmp122 267 268 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:123
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp123 $const54 $const55 	%line{123} %argrw{"wrr"}
	mul		___373_linear_out $tmp123 $tmp117 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:127
#         linear_out = 0;
	assign		___373_linear_out $const1 	%line{127} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:129
#     return linear_out;
	assign		$tmp116 ___373_linear_out 	%line{129} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	color		$tmp99 $tmp100 $tmp108 $tmp116 	%line{156} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:456
#         return;
	eq		$tmp124 ___750_linearized_color $tmp99 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{456} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:458
#     else
	eq		$tmp125 in_eotf $const13 	%line{458} %argrw{"wrr"}
	if		$tmp125 300 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:460
#         int valid_file = 0;
	functioncall	$const57 299 	%line{460} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp128 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 282 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp129 $tmp128 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp129 280 282 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp127 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp127 $tmp128 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp131 out_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 290 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp132 $tmp131 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp132 288 290 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp130 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp130 $tmp131 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp134 out_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 298 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp135 $tmp134 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp135 296 298 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp133 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp133 $tmp134 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		$tmp126 $tmp127 $tmp130 $tmp133 	%line{345} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:460
#         string as_maya_attribute_name = "sBlurAmount",
	eq		$tmp136 ___750_linearized_color $tmp126 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{460} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:462
#         float min = 0.0,
	eq		$tmp137 in_eotf $const58 	%line{462} %argrw{"wrr"}
	if		$tmp137 329 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:464
#         string label = "S Blur",
	functioncall	$const57 328 	%line{464} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp140 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 311 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp141 $tmp140 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp141 309 311 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp139 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp139 $tmp140 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp143 out_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 319 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp144 $tmp143 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp144 317 319 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp142 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp142 $tmp143 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp146 out_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 327 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp147 $tmp146 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp147 325 327 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp145 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp145 $tmp146 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		$tmp138 $tmp139 $tmp142 $tmp145 	%line{345} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:464
#         string label = "S Blur",
	eq		$tmp148 ___750_linearized_color $tmp138 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{464} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:466
#         string help = "Additional blur for texture lookup, along the S direction."
	eq		$tmp149 in_eotf $const59 	%line{466} %argrw{"wrr"}
	if		$tmp149 358 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:468
#     float in_t_blur_amount = 0.0
	functioncall	$const57 357 	%line{468} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp152 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 340 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp153 $tmp152 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp153 338 340 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp151 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp151 $tmp152 $const60 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp155 out_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 348 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp156 $tmp155 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp156 346 348 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp154 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp154 $tmp155 $const60 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp158 out_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 356 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp159 $tmp158 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp159 354 356 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp157 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp157 $tmp158 $const60 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		$tmp150 $tmp151 $tmp154 $tmp157 	%line{345} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:468
#     float in_t_blur_amount = 0.0
	eq		$tmp160 ___750_linearized_color $tmp150 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{468} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:470
#         string as_maya_attribute_name = "tBlurAmount",
	eq		$tmp161 in_eotf $const61 	%line{470} %argrw{"wrr"}
	if		$tmp161 383 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:472
#         float min = 0.0,
	functioncall	$const62 383 	%line{472} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#         Rec1886_EOTF(value[0]),
	compref		$tmp163 out_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 368 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp164 $tmp163 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp164 366 367 	%argrw{"r"}
	pow		$tmp162 $tmp163 $const47 	%argrw{"wrr"}
	assign		$tmp162 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp166 out_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 375 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp167 $tmp166 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp167 373 374 	%argrw{"r"}
	pow		$tmp165 $tmp166 $const47 	%argrw{"wrr"}
	assign		$tmp165 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp169 out_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 382 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp170 $tmp169 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp170 380 381 	%argrw{"r"}
	pow		$tmp168 $tmp169 $const47 	%argrw{"wrr"}
	assign		$tmp168 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___750_linearized_color $tmp162 $tmp165 $tmp168 	%line{310} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:474
#         int as_maya_attribute_hidden = 1,
	eq		$tmp171 in_eotf $const63 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{474} %argrw{"wrr"}
	if		$tmp171 449 450 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:476
#         int gafferNoduleLayoutVisible = 0,
	functioncall	$const64 448 	%line{476} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:264
#     return Rec2020_EOTF(value, 12);
	functioncall	$const64 448 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{264} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:249
#         Rec2020_EOTF(value[0], bitdepth),
	compref		$tmp174 out_color $const1 	%line{249} %argrw{"wrr"}
	functioncall	$const64 407 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp175 $tmp174 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp175 405 406 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp176 $const65 $const66 	%line{184} %argrw{"wrr"}
	if		$tmp176 395 397 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___384_alpha $const52 	%line{186} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___384_beta $const67 	%line{187} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___384_alpha $const68 	%line{191} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___384_beta $const69 	%line{192} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp177 $tmp174 ___384_beta 	%line{195} %argrw{"wrr"}
	if		$tmp177 400 405 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___383_linear_out $tmp174 $const55 	%line{197} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp178 ___384_alpha $const54 	%line{201} %argrw{"wrr"}
	add		$tmp179 $tmp174 $tmp178 	%argrw{"wrr"}
	div		$tmp180 $tmp179 ___384_alpha 	%argrw{"wrr"}
	div		$tmp181 $const54 $const53 	%argrw{"wrr"}
	pow		___383_linear_out $tmp180 $tmp181 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:206
#         linear_out = 0;
	assign		___383_linear_out $const1 	%line{206} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:208
#     return linear_out ;
	assign		$tmp173 ___383_linear_out 	%line{208} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:250
#         Rec2020_EOTF(value[1], bitdepth),
	compref		$tmp183 out_color $const2 	%line{250} %argrw{"wrr"}
	functioncall	$const64 427 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp184 $tmp183 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp184 425 426 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp185 $const65 $const66 	%line{184} %argrw{"wrr"}
	if		$tmp185 415 417 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___384_alpha $const52 	%line{186} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___384_beta $const67 	%line{187} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___384_alpha $const68 	%line{191} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___384_beta $const69 	%line{192} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp186 $tmp183 ___384_beta 	%line{195} %argrw{"wrr"}
	if		$tmp186 420 425 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___383_linear_out $tmp183 $const55 	%line{197} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp187 ___384_alpha $const54 	%line{201} %argrw{"wrr"}
	add		$tmp188 $tmp183 $tmp187 	%argrw{"wrr"}
	div		$tmp189 $tmp188 ___384_alpha 	%argrw{"wrr"}
	div		$tmp190 $const54 $const53 	%argrw{"wrr"}
	pow		___383_linear_out $tmp189 $tmp190 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:206
#         linear_out = 0;
	assign		___383_linear_out $const1 	%line{206} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:208
#     return linear_out ;
	assign		$tmp182 ___383_linear_out 	%line{208} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:251
#         Rec2020_EOTF(value[2], bitdepth));
	compref		$tmp192 out_color $const11 	%line{251} %argrw{"wrr"}
	functioncall	$const64 447 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp193 $tmp192 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp193 445 446 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp194 $const65 $const66 	%line{184} %argrw{"wrr"}
	if		$tmp194 435 437 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___384_alpha $const52 	%line{186} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___384_beta $const67 	%line{187} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___384_alpha $const68 	%line{191} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___384_beta $const69 	%line{192} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp195 $tmp192 ___384_beta 	%line{195} %argrw{"wrr"}
	if		$tmp195 440 445 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___383_linear_out $tmp192 $const55 	%line{197} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp196 ___384_alpha $const54 	%line{201} %argrw{"wrr"}
	add		$tmp197 $tmp192 $tmp196 	%argrw{"wrr"}
	div		$tmp198 $tmp197 ___384_alpha 	%argrw{"wrr"}
	div		$tmp199 $const54 $const53 	%argrw{"wrr"}
	pow		___383_linear_out $tmp198 $tmp199 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:206
#         linear_out = 0;
	assign		___383_linear_out $const1 	%line{206} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:208
#     return linear_out ;
	assign		$tmp191 ___383_linear_out 	%line{208} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:251
#         Rec2020_EOTF(value[2], bitdepth));
	color		$tmp172 $tmp173 $tmp182 $tmp191 	%line{251} %argrw{"wrrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:476
#         int as_maya_attribute_hidden = 1,
	eq		$tmp200 ___750_linearized_color $tmp172 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{476} %argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:480
#     ]],
	assign		___750_linearized_color $const42 	%line{480} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:491
#         int as_maya_attribute_hidden = 1,
	neq		$tmp201 in_rgb_primaries $const70 	%line{491} %argrw{"wrr"}
	neq		$tmp202 $tmp201 $const1 	%argrw{"wrr"}
	if		$tmp202 462 462 	%argrw{"r"}
	functioncall	$const40 459 	%argrw{"r"}
# C:/appleseed\\appleseed\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp204 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp206 ___750_linearized_color $const2 	%argrw{"wrr"}
	compref		$tmp207 ___750_linearized_color $const11 	%argrw{"wrr"}
	max		$tmp205 $tmp206 $tmp207 	%argrw{"wrr"}
	max		$tmp203 $tmp204 $tmp205 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:491
#         if (in_enable_cms && max(out_color) > 0.0)
	gt		$tmp208 $tmp203 $const41 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{491} %argrw{"wrr"}
	neq		$tmp209 $tmp208 $const1 	%argrw{"wrr"}
	assign		$tmp202 $tmp209 	%argrw{"wr"}
	if		$tmp202 1576 1576 	%argrw{"r"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:496
#             {
	functioncall	$const71 1576 	%line{496} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:511
# // furnished to do so, subject to the following conditions:
	eq		$tmp210 in_workingspace_rgb_primaries $const72 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{511} %argrw{"wrr"}
	neq		$tmp211 $tmp210 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:512
# //
	if		$tmp211 467 470 	%line{512} %argrw{"r"}
	eq		$tmp212 in_workingspace_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp213 $tmp212 $const1 	%argrw{"wrr"}
	assign		$tmp211 $tmp213 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:511
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp211 671 1575 	%line{511} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:514
#         C = transform_color_space_to_Rec709(input_color, color_space);
	functioncall	$const74 671 	%line{514} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:48
#     vector v_color = vector(input_color);
	assign		___415_v_color ___750_linearized_color 	%line{48} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:50
#     if (color_space == "sRGB")
	eq		$tmp214 in_rgb_primaries $const75 	%line{50} %argrw{"wrr"}
	if		$tmp214 513 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:52
#         transformed_color = sRGB_EOTF(input_color);
	functioncall	$const43 513 	%line{52} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
# #define DCIP3_GAMMA             2.6
	compref		$tmp216 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 488 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp217 $tmp216 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp217 483 487 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp218 $tmp216 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp219 $tmp218 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp219 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp220 $tmp216 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp220 486 487 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp216 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp215 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp222 ___750_linearized_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 500 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp223 $tmp222 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp223 495 499 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp224 $tmp222 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp225 $tmp224 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp225 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp226 $tmp222 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp226 498 499 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp222 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp221 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp228 ___750_linearized_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 512 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp229 $tmp228 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp229 507 511 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp230 $tmp228 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp231 $tmp230 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp231 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp232 $tmp228 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp232 510 511 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp228 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp227 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___415_transformed_color $tmp215 $tmp221 $tmp227 	%line{93} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:54
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp233 in_rgb_primaries $const72 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{54} %argrw{"wrr"}
	neq		$tmp234 $tmp233 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:55
#              color_space == "sRGB/Rec.709")
	if		$tmp234 516 519 	%line{55} %argrw{"r"}
	eq		$tmp235 in_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp236 $tmp235 $const1 	%argrw{"wrr"}
	assign		$tmp234 $tmp236 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:54
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp234 521 670 	%line{54} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:57
#         transformed_color = input_color;
	assign		___415_transformed_color ___750_linearized_color 	%line{57} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:59
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp237 in_rgb_primaries $const76 	%line{59} %argrw{"wrr"}
	neq		$tmp238 $tmp237 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:60
#              color_space == "Rec.2020")
	if		$tmp238 524 527 	%line{60} %argrw{"r"}
	eq		$tmp239 in_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp240 $tmp239 $const1 	%argrw{"wrr"}
	assign		$tmp238 $tmp240 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:59
#     else if (color_space == "scene-linear Rec 2020" ||
	if		$tmp238 532 670 	%line{59} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:63
#             dot(vector(REC2020_TO_REC709_X), v_color),
	dot		$tmp241 $const78 ___415_v_color 	%line{63} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:64
#             dot(vector(REC2020_TO_REC709_Y), v_color),
	dot		$tmp243 $const79 ___415_v_color 	%line{64} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:65
#             dot(vector(REC2020_TO_REC709_Z), v_color));
	dot		$tmp245 $const80 ___415_v_color 	%line{65} %argrw{"wrr"}
	color		___415_transformed_color $tmp241 $tmp243 $tmp245 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:67
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp247 in_rgb_primaries $const81 	%line{67} %argrw{"wrr"}
	neq		$tmp248 $tmp247 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:68
#              color_space == "DCI-P3")
	if		$tmp248 535 538 	%line{68} %argrw{"r"}
	eq		$tmp249 in_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp250 $tmp249 $const1 	%argrw{"wrr"}
	assign		$tmp248 $tmp250 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:67
#     else if (color_space == "scene-linear DCI-P3" ||
	if		$tmp248 543 670 	%line{67} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:71
#             dot(vector(DCIP3_TO_REC709_X), v_color),
	dot		$tmp251 $const83 ___415_v_color 	%line{71} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:72
#             dot(vector(DCIP3_TO_REC709_Y), v_color),
	dot		$tmp253 $const84 ___415_v_color 	%line{72} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:73
#             dot(vector(DCIP3_TO_REC709_Z), v_color));
	dot		$tmp255 $const85 ___415_v_color 	%line{73} %argrw{"wrr"}
	color		___415_transformed_color $tmp251 $tmp253 $tmp255 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:75
#     else if (color_space == "camera Rec 709")
	eq		$tmp257 in_rgb_primaries $const86 	%line{75} %argrw{"wrr"}
	if		$tmp257 568 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:77
#         transformed_color = Rec1886_EOTF(input_color);
	functioncall	$const62 568 	%line{77} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#         {
	compref		$tmp259 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 553 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp260 $tmp259 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp260 551 552 	%argrw{"r"}
	pow		$tmp258 $tmp259 $const47 	%argrw{"wrr"}
	assign		$tmp258 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp262 ___750_linearized_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 560 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp263 $tmp262 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp263 558 559 	%argrw{"r"}
	pow		$tmp261 $tmp262 $const47 	%argrw{"wrr"}
	assign		$tmp261 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp265 ___750_linearized_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 567 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp266 $tmp265 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp266 565 566 	%argrw{"r"}
	pow		$tmp264 $tmp265 $const47 	%argrw{"wrr"}
	assign		$tmp264 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___415_transformed_color $tmp258 $tmp261 $tmp264 	%line{310} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:79
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp267 in_rgb_primaries $const87 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{79} %argrw{"wrr"}
	if		$tmp267 596 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:81
#         transformed_color = gamma_CCTF(input_color, 1.8);
	functioncall	$const57 596 	%line{81} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
# color Rec2020_EOTF(color value)
	compref		$tmp269 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 579 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp270 $tmp269 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp270 577 579 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp268 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp268 $tmp269 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp272 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 587 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp273 $tmp272 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp273 585 587 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp271 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp271 $tmp272 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp275 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 595 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp276 $tmp275 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp276 593 595 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp274 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp274 $tmp275 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___415_transformed_color $tmp268 $tmp271 $tmp274 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:83
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp277 in_rgb_primaries $const89 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{83} %argrw{"wrr"}
	if		$tmp277 624 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:85
#         transformed_color = gamma_CCTF(input_color, 2.2);
	functioncall	$const57 624 	%line{85} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         Rec2020_OETF(value[1], bitdepth),
	compref		$tmp279 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 607 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp280 $tmp279 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp280 605 607 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp278 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp278 $tmp279 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp282 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 615 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp283 $tmp282 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp283 613 615 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp281 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp281 $tmp282 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp285 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 623 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp286 $tmp285 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp286 621 623 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp284 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp284 $tmp285 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___415_transformed_color $tmp278 $tmp281 $tmp284 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:87
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp287 in_rgb_primaries $const90 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{87} %argrw{"wrr"}
	if		$tmp287 652 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:89
#         transformed_color = gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const57 652 	%line{89} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
# color Rec2020_OETF(color value, int bitdepth)
	compref		$tmp289 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 635 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp290 $tmp289 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp290 633 635 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp288 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp288 $tmp289 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp292 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 643 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp293 $tmp292 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp293 641 643 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp291 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp291 $tmp292 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp295 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 651 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp296 $tmp295 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp296 649 651 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp294 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp294 $tmp295 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___415_transformed_color $tmp288 $tmp291 $tmp294 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:91
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp297 in_rgb_primaries $const91 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{91} %argrw{"wrr"}
	neq		$tmp298 $tmp297 $const1 	%argrw{"wrr"}
	if		$tmp298 655 658 	%argrw{"r"}
	eq		$tmp299 in_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp300 $tmp299 $const1 	%argrw{"wrr"}
	assign		$tmp298 $tmp300 	%argrw{"wr"}
	if		$tmp298 663 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:94
#             dot(vector(ACES_TO_REC709_X), v_color),
	dot		$tmp301 $const93 ___415_v_color 	%line{94} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:95
#             dot(vector(ACES_TO_REC709_Y), v_color),
	dot		$tmp303 $const94 ___415_v_color 	%line{95} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:96
#             dot(vector(ACES_TO_REC709_Z), v_color));
	dot		$tmp305 $const95 ___415_v_color 	%line{96} %argrw{"wrr"}
	color		___415_transformed_color $tmp301 $tmp303 $tmp305 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:98
#     else if (color_space == "ACEScg")
	eq		$tmp307 in_rgb_primaries $const96 	%line{98} %argrw{"wrr"}
	if		$tmp307 669 670 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:101
#             dot(vector(ACESCG_TO_REC709_X), v_color),
	dot		$tmp308 $const97 ___415_v_color 	%line{101} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:102
#             dot(vector(ACESCG_TO_REC709_Y), v_color),
	dot		$tmp310 $const98 ___415_v_color 	%line{102} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:103
#             dot(vector(ACESCG_TO_REC709_Z), v_color));
	dot		$tmp312 $const99 ___415_v_color 	%line{103} %argrw{"wrr"}
	color		___415_transformed_color $tmp308 $tmp310 $tmp312 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:107
#         transformed_color = color(0);
	assign		___415_transformed_color $const42 	%line{107} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:109
#     return transformed_color;
	assign		___475_C ___415_transformed_color 	%line{109} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:516
#     else if (working_space == "scene-linear Rec 2020" ||
	eq		$tmp314 in_workingspace_rgb_primaries $const76 	%line{516} %argrw{"wrr"}
	neq		$tmp315 $tmp314 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:517
#              working_space == "Rec.2020")
	if		$tmp315 674 677 	%line{517} %argrw{"r"}
	eq		$tmp316 in_workingspace_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp317 $tmp316 $const1 	%argrw{"wrr"}
	assign		$tmp315 $tmp317 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:516
#     else if (working_space == "scene-linear Rec 2020" ||
	if		$tmp315 898 1575 	%line{516} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:519
#         C = transform_color_space_to_Rec2020(input_color, color_space);
	functioncall	$const100 898 	%line{519} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:121
#     vector v_color = vector(input_color);
	assign		___427_v_color ___750_linearized_color 	%line{121} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:123
#     if (color_space == "sRGB")
	eq		$tmp318 in_rgb_primaries $const75 	%line{123} %argrw{"wrr"}
	if		$tmp318 724 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:125
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const43 720 	%line{125} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
#         sRGB_EOTF(value[0]),
	compref		$tmp320 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 695 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp321 $tmp320 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp321 690 694 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp322 $tmp320 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp323 $tmp322 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp323 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp324 $tmp320 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp324 693 694 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp320 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp319 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp326 ___750_linearized_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 707 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp327 $tmp326 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp327 702 706 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp328 $tmp326 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp329 $tmp328 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp329 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp330 $tmp326 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp330 705 706 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp326 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp325 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp332 ___750_linearized_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 719 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp333 $tmp332 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp333 714 718 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp334 $tmp332 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp335 $tmp334 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp335 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp336 $tmp332 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp336 717 718 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp332 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp331 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___427_v_color $tmp319 $tmp325 $tmp331 	%line{93} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:128
# //
	dot		$tmp337 $const101 ___427_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{128} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:129
# // Reference:
	dot		$tmp339 $const102 ___427_v_color 	%line{129} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:130
# //
	dot		$tmp341 $const103 ___427_v_color 	%line{130} %argrw{"wrr"}
	color		___427_transformed_color $tmp337 $tmp339 $tmp341 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:132
# //
	eq		$tmp343 in_rgb_primaries $const72 	%line{132} %argrw{"wrr"}
	neq		$tmp344 $tmp343 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:133
# //      $MAYA_LOCATION/docs/files/GUID-BB4F38CF-6AA8-4D35-96DD-7F75D62FD3A7.htm
	if		$tmp344 727 730 	%line{133} %argrw{"r"}
	eq		$tmp345 in_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp346 $tmp345 $const1 	%argrw{"wrr"}
	assign		$tmp344 $tmp346 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:132
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp344 735 897 	%line{132} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:136
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp347 $const101 ___427_v_color 	%line{136} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:137
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp349 $const102 ___427_v_color 	%line{137} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:138
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp351 $const103 ___427_v_color 	%line{138} %argrw{"wrr"}
	color		___427_transformed_color $tmp347 $tmp349 $tmp351 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:140
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp353 in_rgb_primaries $const76 	%line{140} %argrw{"wrr"}
	neq		$tmp354 $tmp353 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:141
#              color_space == "Rec.2020")
	if		$tmp354 738 741 	%line{141} %argrw{"r"}
	eq		$tmp355 in_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp356 $tmp355 $const1 	%argrw{"wrr"}
	assign		$tmp354 $tmp356 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:140
#     else if (color_space == "scene-linear Rec 2020" ||
	if		$tmp354 743 897 	%line{140} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:143
#         transformed_color = input_color;
	assign		___427_transformed_color ___750_linearized_color 	%line{143} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:145
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp357 in_rgb_primaries $const81 	%line{145} %argrw{"wrr"}
	neq		$tmp358 $tmp357 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:146
#              color_space == "DCI-P3")
	if		$tmp358 746 749 	%line{146} %argrw{"r"}
	eq		$tmp359 in_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp360 $tmp359 $const1 	%argrw{"wrr"}
	assign		$tmp358 $tmp360 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:145
#     else if (color_space == "scene-linear DCI-P3" ||
	if		$tmp358 754 897 	%line{145} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:149
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	dot		$tmp361 $const104 ___427_v_color 	%line{149} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:150
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	dot		$tmp363 $const105 ___427_v_color 	%line{150} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:151
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	dot		$tmp365 $const106 ___427_v_color 	%line{151} %argrw{"wrr"}
	color		___427_transformed_color $tmp361 $tmp363 $tmp365 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:153
#     else if (color_space == "camera Rec 709")
	eq		$tmp367 in_rgb_primaries $const86 	%line{153} %argrw{"wrr"}
	if		$tmp367 783 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:155
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const62 779 	%line{155} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#     return color(
	compref		$tmp369 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 764 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp370 $tmp369 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp370 762 763 	%argrw{"r"}
	pow		$tmp368 $tmp369 $const47 	%argrw{"wrr"}
	assign		$tmp368 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp372 ___750_linearized_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 771 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp373 $tmp372 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp373 769 770 	%argrw{"r"}
	pow		$tmp371 $tmp372 $const47 	%argrw{"wrr"}
	assign		$tmp371 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp375 ___750_linearized_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 778 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp376 $tmp375 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp376 776 777 	%argrw{"r"}
	pow		$tmp374 $tmp375 $const47 	%argrw{"wrr"}
	assign		$tmp374 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___427_v_color $tmp368 $tmp371 $tmp374 	%line{310} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:158
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp377 $const101 ___427_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{158} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:159
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp379 $const102 ___427_v_color 	%line{159} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:160
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp381 $const103 ___427_v_color 	%line{160} %argrw{"wrr"}
	color		___427_transformed_color $tmp377 $tmp379 $tmp381 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:162
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp383 in_rgb_primaries $const87 	%line{162} %argrw{"wrr"}
	if		$tmp383 815 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:164
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const57 811 	%line{164} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
# 
	compref		$tmp385 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 794 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp386 $tmp385 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp386 792 794 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp384 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp384 $tmp385 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp388 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 802 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp389 $tmp388 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp389 800 802 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp387 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp387 $tmp388 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp391 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 810 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp392 $tmp391 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp392 808 810 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp390 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp390 $tmp391 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___427_v_color $tmp384 $tmp387 $tmp390 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:167
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp393 $const101 ___427_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{167} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:168
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp395 $const102 ___427_v_color 	%line{168} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:169
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp397 $const103 ___427_v_color 	%line{169} %argrw{"wrr"}
	color		___427_transformed_color $tmp393 $tmp395 $tmp397 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:171
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp399 in_rgb_primaries $const89 	%line{171} %argrw{"wrr"}
	if		$tmp399 847 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:173
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const57 843 	%line{173} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
# //      BT.2020: Parameter Values for Ultra High Definition Television
	compref		$tmp401 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 826 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp402 $tmp401 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp402 824 826 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp400 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp400 $tmp401 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp404 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 834 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp405 $tmp404 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp405 832 834 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp403 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp403 $tmp404 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp407 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 842 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp408 $tmp407 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp408 840 842 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp406 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp406 $tmp407 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___427_v_color $tmp400 $tmp403 $tmp406 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:176
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp409 $const101 ___427_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{176} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:177
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp411 $const102 ___427_v_color 	%line{177} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:178
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp413 $const103 ___427_v_color 	%line{178} %argrw{"wrr"}
	color		___427_transformed_color $tmp409 $tmp411 $tmp413 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:180
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp415 in_rgb_primaries $const90 	%line{180} %argrw{"wrr"}
	if		$tmp415 879 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:182
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const57 875 	%line{182} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#     return color(
	compref		$tmp417 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 858 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp418 $tmp417 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp418 856 858 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp416 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp416 $tmp417 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp420 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 866 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp421 $tmp420 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp421 864 866 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp419 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp419 $tmp420 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp423 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 874 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp424 $tmp423 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp424 872 874 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp422 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp422 $tmp423 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___427_v_color $tmp416 $tmp419 $tmp422 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:185
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp425 $const101 ___427_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{185} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:186
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp427 $const102 ___427_v_color 	%line{186} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:187
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp429 $const103 ___427_v_color 	%line{187} %argrw{"wrr"}
	color		___427_transformed_color $tmp425 $tmp427 $tmp429 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:189
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp431 in_rgb_primaries $const91 	%line{189} %argrw{"wrr"}
	neq		$tmp432 $tmp431 $const1 	%argrw{"wrr"}
	if		$tmp432 882 885 	%argrw{"r"}
	eq		$tmp433 in_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp434 $tmp433 $const1 	%argrw{"wrr"}
	assign		$tmp432 $tmp434 	%argrw{"wr"}
	if		$tmp432 890 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:192
#             dot(vector(ACES_TO_REC2020_X), v_color),
	dot		$tmp435 $const107 ___427_v_color 	%line{192} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:193
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	dot		$tmp437 $const108 ___427_v_color 	%line{193} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:194
#             dot(vector(ACES_TO_REC2020_Z), v_color));
	dot		$tmp439 $const109 ___427_v_color 	%line{194} %argrw{"wrr"}
	color		___427_transformed_color $tmp435 $tmp437 $tmp439 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:196
#     else if (color_space == "ACEScg")
	eq		$tmp441 in_rgb_primaries $const96 	%line{196} %argrw{"wrr"}
	if		$tmp441 896 897 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:199
#             dot(vector(ACESCG_TO_REC2020_X), v_color),
	dot		$tmp442 $const110 ___427_v_color 	%line{199} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:200
#             dot(vector(ACESCG_TO_REC2020_Y), v_color),
	dot		$tmp444 $const111 ___427_v_color 	%line{200} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:201
#             dot(vector(ACESCG_TO_REC2020_Z), v_color));
	dot		$tmp446 $const112 ___427_v_color 	%line{201} %argrw{"wrr"}
	color		___427_transformed_color $tmp442 $tmp444 $tmp446 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:205
#         transformed_color = color(0);
	assign		___427_transformed_color $const42 	%line{205} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:207
#     return transformed_color;
	assign		___475_C ___427_transformed_color 	%line{207} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:521
#     else if (working_space == "scene-linear DCI-P3" ||
	eq		$tmp448 in_workingspace_rgb_primaries $const81 	%line{521} %argrw{"wrr"}
	neq		$tmp449 $tmp448 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:522
#              working_space == "DCI-P3")
	if		$tmp449 901 904 	%line{522} %argrw{"r"}
	eq		$tmp450 in_workingspace_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp451 $tmp450 $const1 	%argrw{"wrr"}
	assign		$tmp449 $tmp451 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:521
#     else if (working_space == "scene-linear DCI-P3" ||
	if		$tmp449 1125 1575 	%line{521} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:524
#         C = transform_color_space_to_DCIP3(input_color, color_space);
	functioncall	$const113 1125 	%line{524} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:219
#     vector v_color = vector(input_color);
	assign		___439_v_color ___750_linearized_color 	%line{219} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:221
#     if (color_space == "sRGB")
	eq		$tmp452 in_rgb_primaries $const75 	%line{221} %argrw{"wrr"}
	if		$tmp452 951 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:223
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const43 947 	%line{223} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
#         sRGB_EOTF(value[0]),
	compref		$tmp454 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 922 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp455 $tmp454 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp455 917 921 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp456 $tmp454 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp457 $tmp456 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp457 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp458 $tmp454 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp458 920 921 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp454 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp453 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp460 ___750_linearized_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 934 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp461 $tmp460 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp461 929 933 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp462 $tmp460 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp463 $tmp462 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp463 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp464 $tmp460 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp464 932 933 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp460 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp459 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp466 ___750_linearized_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 946 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp467 $tmp466 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp467 941 945 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp468 $tmp466 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp469 $tmp468 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp469 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp470 $tmp466 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp470 944 945 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp466 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp465 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___439_v_color $tmp453 $tmp459 $tmp465 	%line{93} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:226
#              color_space == "sRGB/Rec.709")
	dot		$tmp471 $const114 ___439_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{226} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:227
#     {
	dot		$tmp473 $const115 ___439_v_color 	%line{227} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:228
#         transformed_color = color(
	dot		$tmp475 $const116 ___439_v_color 	%line{228} %argrw{"wrr"}
	color		___439_transformed_color $tmp471 $tmp473 $tmp475 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:230
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	eq		$tmp477 in_rgb_primaries $const72 	%line{230} %argrw{"wrr"}
	neq		$tmp478 $tmp477 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:231
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	if		$tmp478 954 957 	%line{231} %argrw{"r"}
	eq		$tmp479 in_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp480 $tmp479 $const1 	%argrw{"wrr"}
	assign		$tmp478 $tmp480 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:230
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp478 962 1124 	%line{230} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:234
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp481 $const114 ___439_v_color 	%line{234} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:235
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp483 $const115 ___439_v_color 	%line{235} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:236
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp485 $const116 ___439_v_color 	%line{236} %argrw{"wrr"}
	color		___439_transformed_color $tmp481 $tmp483 $tmp485 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:238
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp487 in_rgb_primaries $const76 	%line{238} %argrw{"wrr"}
	neq		$tmp488 $tmp487 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:239
#              color_space == "Rec.2020")
	if		$tmp488 965 968 	%line{239} %argrw{"r"}
	eq		$tmp489 in_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp490 $tmp489 $const1 	%argrw{"wrr"}
	assign		$tmp488 $tmp490 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:238
#     else if (color_space == "scene-linear Rec 2020" ||
	if		$tmp488 973 1124 	%line{238} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:242
#             dot(vector(REC2020_TO_DCIP3_X), v_color),
	dot		$tmp491 $const117 ___439_v_color 	%line{242} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:243
#             dot(vector(REC2020_TO_DCIP3_Y), v_color),
	dot		$tmp493 $const118 ___439_v_color 	%line{243} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:244
#             dot(vector(REC2020_TO_DCIP3_Z), v_color));
	dot		$tmp495 $const119 ___439_v_color 	%line{244} %argrw{"wrr"}
	color		___439_transformed_color $tmp491 $tmp493 $tmp495 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:246
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp497 in_rgb_primaries $const81 	%line{246} %argrw{"wrr"}
	neq		$tmp498 $tmp497 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:247
#              color_space == "DCI-P3")
	if		$tmp498 976 979 	%line{247} %argrw{"r"}
	eq		$tmp499 in_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp500 $tmp499 $const1 	%argrw{"wrr"}
	assign		$tmp498 $tmp500 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:246
#     else if (color_space == "scene-linear DCI-P3" ||
	if		$tmp498 981 1124 	%line{246} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:249
#         transformed_color = input_color;
	assign		___439_transformed_color ___750_linearized_color 	%line{249} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:251
#     else if (color_space == "camera Rec 709")
	eq		$tmp501 in_rgb_primaries $const86 	%line{251} %argrw{"wrr"}
	if		$tmp501 1010 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:253
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const62 1006 	%line{253} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#     {
	compref		$tmp503 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 991 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp504 $tmp503 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp504 989 990 	%argrw{"r"}
	pow		$tmp502 $tmp503 $const47 	%argrw{"wrr"}
	assign		$tmp502 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp506 ___750_linearized_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 998 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp507 $tmp506 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp507 996 997 	%argrw{"r"}
	pow		$tmp505 $tmp506 $const47 	%argrw{"wrr"}
	assign		$tmp505 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp509 ___750_linearized_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 1005 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp510 $tmp509 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp510 1003 1004 	%argrw{"r"}
	pow		$tmp508 $tmp509 $const47 	%argrw{"wrr"}
	assign		$tmp508 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___439_v_color $tmp502 $tmp505 $tmp508 	%line{310} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:256
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp511 $const114 ___439_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{256} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:257
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp513 $const115 ___439_v_color 	%line{257} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:258
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp515 $const116 ___439_v_color 	%line{258} %argrw{"wrr"}
	color		___439_transformed_color $tmp511 $tmp513 $tmp515 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:260
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp517 in_rgb_primaries $const87 	%line{260} %argrw{"wrr"}
	if		$tmp517 1042 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:262
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const57 1038 	%line{262} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#     else
	compref		$tmp519 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1021 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp520 $tmp519 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp520 1019 1021 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp518 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp518 $tmp519 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp522 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1029 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp523 $tmp522 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp523 1027 1029 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp521 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp521 $tmp522 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp525 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1037 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp526 $tmp525 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp526 1035 1037 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp524 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp524 $tmp525 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___439_v_color $tmp518 $tmp521 $tmp524 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:265
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp527 $const114 ___439_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{265} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:266
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp529 $const115 ___439_v_color 	%line{266} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:267
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp531 $const116 ___439_v_color 	%line{267} %argrw{"wrr"}
	color		___439_transformed_color $tmp527 $tmp529 $tmp531 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:269
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp533 in_rgb_primaries $const89 	%line{269} %argrw{"wrr"}
	if		$tmp533 1074 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:271
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const57 1070 	%line{271} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
# 
	compref		$tmp535 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1053 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp536 $tmp535 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp536 1051 1053 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp534 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp534 $tmp535 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp538 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1061 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp539 $tmp538 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp539 1059 1061 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp537 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp537 $tmp538 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp541 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1069 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp542 $tmp541 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp542 1067 1069 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp540 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp540 $tmp541 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___439_v_color $tmp534 $tmp537 $tmp540 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:274
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp543 $const114 ___439_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{274} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:275
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp545 $const115 ___439_v_color 	%line{275} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:276
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp547 $const116 ___439_v_color 	%line{276} %argrw{"wrr"}
	color		___439_transformed_color $tmp543 $tmp545 $tmp547 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:278
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp549 in_rgb_primaries $const90 	%line{278} %argrw{"wrr"}
	if		$tmp549 1106 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:280
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const57 1102 	%line{280} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#     {
	compref		$tmp551 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1085 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp552 $tmp551 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp552 1083 1085 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp550 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp550 $tmp551 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp554 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1093 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp555 $tmp554 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp555 1091 1093 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp553 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp553 $tmp554 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp557 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1101 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp558 $tmp557 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp558 1099 1101 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp556 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp556 $tmp557 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___439_v_color $tmp550 $tmp553 $tmp556 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:283
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp559 $const114 ___439_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{283} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:284
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp561 $const115 ___439_v_color 	%line{284} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:285
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp563 $const116 ___439_v_color 	%line{285} %argrw{"wrr"}
	color		___439_transformed_color $tmp559 $tmp561 $tmp563 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:287
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp565 in_rgb_primaries $const91 	%line{287} %argrw{"wrr"}
	neq		$tmp566 $tmp565 $const1 	%argrw{"wrr"}
	if		$tmp566 1109 1112 	%argrw{"r"}
	eq		$tmp567 in_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp568 $tmp567 $const1 	%argrw{"wrr"}
	assign		$tmp566 $tmp568 	%argrw{"wr"}
	if		$tmp566 1117 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:290
#             dot(vector(ACES_TO_DCIP3_X), v_color),
	dot		$tmp569 $const120 ___439_v_color 	%line{290} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:291
#             dot(vector(ACES_TO_DCIP3_Y), v_color),
	dot		$tmp571 $const121 ___439_v_color 	%line{291} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:292
#             dot(vector(ACES_TO_DCIP3_Z), v_color));
	dot		$tmp573 $const122 ___439_v_color 	%line{292} %argrw{"wrr"}
	color		___439_transformed_color $tmp569 $tmp571 $tmp573 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:294
#     else if (color_space == "ACEScg")
	eq		$tmp575 in_rgb_primaries $const96 	%line{294} %argrw{"wrr"}
	if		$tmp575 1123 1124 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:297
#             dot(vector(ACESCG_TO_DCIP3_X), v_color),
	dot		$tmp576 $const123 ___439_v_color 	%line{297} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:298
#             dot(vector(ACESCG_TO_DCIP3_Y), v_color),
	dot		$tmp578 $const124 ___439_v_color 	%line{298} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:299
#             dot(vector(ACESCG_TO_DCIP3_Z), v_color));
	dot		$tmp580 $const125 ___439_v_color 	%line{299} %argrw{"wrr"}
	color		___439_transformed_color $tmp576 $tmp578 $tmp580 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:303
#         transformed_color = color(0);
	assign		___439_transformed_color $const42 	%line{303} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:305
#     return transformed_color;
	assign		___475_C ___439_transformed_color 	%line{305} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:526
#     else if (working_space == "ACES2065-1" || working_space == "ACES")
	eq		$tmp582 in_workingspace_rgb_primaries $const91 	%line{526} %argrw{"wrr"}
	neq		$tmp583 $tmp582 $const1 	%argrw{"wrr"}
	if		$tmp583 1128 1131 	%argrw{"r"}
	eq		$tmp584 in_workingspace_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp585 $tmp584 $const1 	%argrw{"wrr"}
	assign		$tmp583 $tmp585 	%argrw{"wr"}
	if		$tmp583 1352 1575 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:528
#         C = transform_color_space_to_ACES(input_color, color_space);
	functioncall	$const126 1352 	%line{528} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:317
#     vector v_color = vector(input_color);
	assign		___451_v_color ___750_linearized_color 	%line{317} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:319
#     if (color_space == "sRGB")
	eq		$tmp586 in_rgb_primaries $const75 	%line{319} %argrw{"wrr"}
	if		$tmp586 1178 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:321
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const43 1174 	%line{321} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
#         sRGB_EOTF(value[0]),
	compref		$tmp588 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 1149 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp589 $tmp588 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp589 1144 1148 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp590 $tmp588 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp591 $tmp590 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp591 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp592 $tmp588 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp592 1147 1148 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp588 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp587 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp594 ___750_linearized_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 1161 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp595 $tmp594 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp595 1156 1160 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp596 $tmp594 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp597 $tmp596 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp597 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp598 $tmp594 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp598 1159 1160 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp594 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp593 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp600 ___750_linearized_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 1173 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp601 $tmp600 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp601 1168 1172 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp602 $tmp600 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp603 $tmp602 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp603 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp604 $tmp600 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp604 1171 1172 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp600 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp599 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___451_v_color $tmp587 $tmp593 $tmp599 	%line{93} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:324
#              color_space == "sRGB/Rec.709")
	dot		$tmp605 $const127 ___451_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{324} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:325
#     {
	dot		$tmp607 $const128 ___451_v_color 	%line{325} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:326
#         transformed_color = color(
	dot		$tmp609 $const129 ___451_v_color 	%line{326} %argrw{"wrr"}
	color		___451_transformed_color $tmp605 $tmp607 $tmp609 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:328
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	eq		$tmp611 in_rgb_primaries $const72 	%line{328} %argrw{"wrr"}
	neq		$tmp612 $tmp611 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:329
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	if		$tmp612 1181 1184 	%line{329} %argrw{"r"}
	eq		$tmp613 in_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp614 $tmp613 $const1 	%argrw{"wrr"}
	assign		$tmp612 $tmp614 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:328
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp612 1189 1351 	%line{328} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:332
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp615 $const127 ___451_v_color 	%line{332} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:333
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp617 $const128 ___451_v_color 	%line{333} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:334
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp619 $const129 ___451_v_color 	%line{334} %argrw{"wrr"}
	color		___451_transformed_color $tmp615 $tmp617 $tmp619 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:336
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp621 in_rgb_primaries $const76 	%line{336} %argrw{"wrr"}
	neq		$tmp622 $tmp621 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:337
#              color_space == "Rec.2020")
	if		$tmp622 1192 1195 	%line{337} %argrw{"r"}
	eq		$tmp623 in_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp624 $tmp623 $const1 	%argrw{"wrr"}
	assign		$tmp622 $tmp624 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:336
#     else if (color_space == "scene-linear Rec 2020" ||
	if		$tmp622 1200 1351 	%line{336} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:340
#             dot(vector(REC2020_TO_ACES_X), v_color),
	dot		$tmp625 $const130 ___451_v_color 	%line{340} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:341
#             dot(vector(REC2020_TO_ACES_Y), v_color),
	dot		$tmp627 $const131 ___451_v_color 	%line{341} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:342
#             dot(vector(REC2020_TO_ACES_Z), v_color));
	dot		$tmp629 $const132 ___451_v_color 	%line{342} %argrw{"wrr"}
	color		___451_transformed_color $tmp625 $tmp627 $tmp629 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:344
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp631 in_rgb_primaries $const81 	%line{344} %argrw{"wrr"}
	neq		$tmp632 $tmp631 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:345
#              color_space == "DCI-P3")
	if		$tmp632 1203 1206 	%line{345} %argrw{"r"}
	eq		$tmp633 in_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp634 $tmp633 $const1 	%argrw{"wrr"}
	assign		$tmp632 $tmp634 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:344
#     else if (color_space == "scene-linear DCI-P3" ||
	if		$tmp632 1211 1351 	%line{344} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:348
#             dot(vector(DCIP3_TO_ACES_X), v_color),
	dot		$tmp635 $const133 ___451_v_color 	%line{348} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:349
#             dot(vector(DCIP3_TO_ACES_Y), v_color),
	dot		$tmp637 $const134 ___451_v_color 	%line{349} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:350
#             dot(vector(DCIP3_TO_ACES_Z), v_color));
	dot		$tmp639 $const135 ___451_v_color 	%line{350} %argrw{"wrr"}
	color		___451_transformed_color $tmp635 $tmp637 $tmp639 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:352
#     else if (color_space == "camera Rec 709")
	eq		$tmp641 in_rgb_primaries $const86 	%line{352} %argrw{"wrr"}
	if		$tmp641 1240 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:354
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const62 1236 	%line{354} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#         Rec1886_EOTF(value[0]),
	compref		$tmp643 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 1221 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp644 $tmp643 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp644 1219 1220 	%argrw{"r"}
	pow		$tmp642 $tmp643 $const47 	%argrw{"wrr"}
	assign		$tmp642 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp646 ___750_linearized_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 1228 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp647 $tmp646 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp647 1226 1227 	%argrw{"r"}
	pow		$tmp645 $tmp646 $const47 	%argrw{"wrr"}
	assign		$tmp645 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp649 ___750_linearized_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 1235 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp650 $tmp649 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp650 1233 1234 	%argrw{"r"}
	pow		$tmp648 $tmp649 $const47 	%argrw{"wrr"}
	assign		$tmp648 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___451_v_color $tmp642 $tmp645 $tmp648 	%line{310} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:357
#     color transformed_color;
	dot		$tmp651 $const127 ___451_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{357} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:358
#     vector v_color = vector(input_color);
	dot		$tmp653 $const128 ___451_v_color 	%line{358} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:359
# 
	dot		$tmp655 $const129 ___451_v_color 	%line{359} %argrw{"wrr"}
	color		___451_transformed_color $tmp651 $tmp653 $tmp655 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:361
#     {
	eq		$tmp657 in_rgb_primaries $const87 	%line{361} %argrw{"wrr"}
	if		$tmp657 1272 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:363
#     }
	functioncall	$const57 1268 	%line{363} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp659 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1251 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp660 $tmp659 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp660 1249 1251 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp658 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp658 $tmp659 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp662 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1259 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp663 $tmp662 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp663 1257 1259 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp661 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp661 $tmp662 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp665 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1267 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp666 $tmp665 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp666 1265 1267 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp664 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp664 $tmp665 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___451_v_color $tmp658 $tmp661 $tmp664 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:366
# // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	dot		$tmp667 $const127 ___451_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{366} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:367
# // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	dot		$tmp669 $const128 ___451_v_color 	%line{367} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:368
# // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	dot		$tmp671 $const129 ___451_v_color 	%line{368} %argrw{"wrr"}
	color		___451_transformed_color $tmp667 $tmp669 $tmp671 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:370
# // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	eq		$tmp673 in_rgb_primaries $const89 	%line{370} %argrw{"wrr"}
	if		$tmp673 1304 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:372
# //
	functioncall	$const57 1300 	%line{372} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp675 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1283 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp676 $tmp675 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp676 1281 1283 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp674 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp674 $tmp675 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp678 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1291 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp679 $tmp678 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp679 1289 1291 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp677 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp677 $tmp678 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp681 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1299 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp682 $tmp681 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp682 1297 1299 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp680 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp680 $tmp681 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___451_v_color $tmp674 $tmp677 $tmp680 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:375
# #define AS_MAYA_CMS_SYNCOLOR_IDT_H
	dot		$tmp683 $const127 ___451_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{375} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:376
# 
	dot		$tmp685 $const128 ___451_v_color 	%line{376} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:377
# #include "appleseed/color/as_colorimetry.h"
	dot		$tmp687 $const129 ___451_v_color 	%line{377} %argrw{"wrr"}
	color		___451_transformed_color $tmp683 $tmp685 $tmp687 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:379
# 
	eq		$tmp689 in_rgb_primaries $const90 	%line{379} %argrw{"wrr"}
	if		$tmp689 1336 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:381
# // Reference:
	functioncall	$const57 1332 	%line{381} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp691 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1315 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp692 $tmp691 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp692 1313 1315 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp690 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp690 $tmp691 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp694 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1323 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp695 $tmp694 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp695 1321 1323 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp693 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp693 $tmp694 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp697 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1331 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp698 $tmp697 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp698 1329 1331 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp696 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp696 $tmp697 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___451_v_color $tmp690 $tmp693 $tmp696 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:384
# //
	dot		$tmp699 $const127 ___451_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{384} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:385
# //      $MAYA_LOCATION/docs/files/GUID-BB4F38CF-6AA8-4D35-96DD-7F75D62FD3A7.htm
	dot		$tmp701 $const128 ___451_v_color 	%line{385} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:386
# //
	dot		$tmp703 $const129 ___451_v_color 	%line{386} %argrw{"wrr"}
	color		___451_transformed_color $tmp699 $tmp701 $tmp703 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:388
# color transform_color_space_to_Rec709(
	eq		$tmp705 in_rgb_primaries $const91 	%line{388} %argrw{"wrr"}
	neq		$tmp706 $tmp705 $const1 	%argrw{"wrr"}
	if		$tmp706 1339 1342 	%argrw{"r"}
	eq		$tmp707 in_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp708 $tmp707 $const1 	%argrw{"wrr"}
	assign		$tmp706 $tmp708 	%argrw{"wr"}
	if		$tmp706 1344 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:390
#     string color_space)
	assign		___451_transformed_color ___750_linearized_color 	%line{390} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:392
#     color transformed_color;
	eq		$tmp709 in_rgb_primaries $const96 	%line{392} %argrw{"wrr"}
	if		$tmp709 1350 1351 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:395
#     if (color_space == "sRGB")
	dot		$tmp710 $const136 ___451_v_color 	%line{395} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:396
#     {
	dot		$tmp712 $const137 ___451_v_color 	%line{396} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:397
#         transformed_color = sRGB_EOTF(input_color);
	dot		$tmp714 $const138 ___451_v_color 	%line{397} %argrw{"wrr"}
	color		___451_transformed_color $tmp710 $tmp712 $tmp714 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:401
#     {
	assign		___451_transformed_color $const42 	%line{401} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:403
#     }
	assign		___475_C ___451_transformed_color 	%line{403} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:530
#             dot(vector(REC709_TO_REC2020_X), v_color),
	eq		$tmp716 in_workingspace_rgb_primaries $const96 	%line{530} %argrw{"wrr"}
	if		$tmp716 1574 1575 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:532
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	functioncall	$const139 1574 	%line{532} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:415
#     vector v_color = vector(input_color);
	assign		___463_v_color ___750_linearized_color 	%line{415} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:417
#     if (color_space == "sRGB")
	eq		$tmp717 in_rgb_primaries $const75 	%line{417} %argrw{"wrr"}
	if		$tmp717 1400 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:419
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const43 1396 	%line{419} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:91
#         sRGB_EOTF(value[0]),
	compref		$tmp719 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{91} %argrw{"wrr"}
	functioncall	$const43 1371 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp720 $tmp719 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp720 1366 1370 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp721 $tmp719 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp722 $tmp721 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp722 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp723 $tmp719 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp723 1369 1370 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp719 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp718 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:92
#         sRGB_EOTF(value[1]),
	compref		$tmp725 ___750_linearized_color $const2 	%line{92} %argrw{"wrr"}
	functioncall	$const43 1383 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp726 $tmp725 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp726 1378 1382 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp727 $tmp725 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp728 $tmp727 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp728 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp729 $tmp725 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp729 1381 1382 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp725 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp724 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	compref		$tmp731 ___750_linearized_color $const11 	%line{93} %argrw{"wrr"}
	functioncall	$const43 1395 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:54
#     if (value > 0.04045)
	gt		$tmp732 $tmp731 $const44 	%line{54} %argrw{"wrr"}
	if		$tmp732 1390 1394 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:56
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp733 $tmp731 $const45 	%line{56} %argrw{"wrr"}
	div		$tmp734 $tmp733 $const46 	%argrw{"wrr"}
	pow		___363_linear_out $tmp734 $const47 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:58
#     else if (value > 0)
	gt		$tmp735 $tmp731 $const1 	%line{58} %argrw{"wrr"}
	if		$tmp735 1393 1394 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:60
#         linear_out = value / 12.92;
	div		___363_linear_out $tmp731 $const48 	%line{60} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:64
#         linear_out = 0;
	assign		___363_linear_out $const1 	%line{64} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:66
#     return linear_out;
	assign		$tmp730 ___363_linear_out 	%line{66} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:93
#         sRGB_EOTF(value[2]));
	color		___463_v_color $tmp718 $tmp724 $tmp730 	%line{93} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:422
#              color_space == "sRGB/Rec.709")
	dot		$tmp736 $const140 ___463_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{422} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:423
#     {
	dot		$tmp738 $const141 ___463_v_color 	%line{423} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:424
#         transformed_color = color(
	dot		$tmp740 $const142 ___463_v_color 	%line{424} %argrw{"wrr"}
	color		___463_transformed_color $tmp736 $tmp738 $tmp740 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:426
#             dot(vector(REC709_TO_ACES_Y), v_color),
	eq		$tmp742 in_rgb_primaries $const72 	%line{426} %argrw{"wrr"}
	neq		$tmp743 $tmp742 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:427
#             dot(vector(REC709_TO_ACES_Z), v_color));
	if		$tmp743 1403 1406 	%line{427} %argrw{"r"}
	eq		$tmp744 in_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp745 $tmp744 $const1 	%argrw{"wrr"}
	assign		$tmp743 $tmp745 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:426
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	if		$tmp743 1411 1573 	%line{426} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:430
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp746 $const140 ___463_v_color 	%line{430} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:431
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp748 $const141 ___463_v_color 	%line{431} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:432
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp750 $const142 ___463_v_color 	%line{432} %argrw{"wrr"}
	color		___463_transformed_color $tmp746 $tmp748 $tmp750 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:434
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp752 in_rgb_primaries $const76 	%line{434} %argrw{"wrr"}
	neq		$tmp753 $tmp752 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:435
#              color_space == "Rec.2020")
	if		$tmp753 1414 1417 	%line{435} %argrw{"r"}
	eq		$tmp754 in_rgb_primaries $const77 	%argrw{"wrr"}
	neq		$tmp755 $tmp754 $const1 	%argrw{"wrr"}
	assign		$tmp753 $tmp755 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:434
#     else if (color_space == "scene-linear Rec 2020" ||
	if		$tmp753 1422 1573 	%line{434} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:438
#             dot(vector(REC2020_TO_ACESCG_X), v_color),
	dot		$tmp756 $const143 ___463_v_color 	%line{438} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:439
#             dot(vector(REC2020_TO_ACESCG_Y), v_color),
	dot		$tmp758 $const144 ___463_v_color 	%line{439} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:440
#             dot(vector(REC2020_TO_ACESCG_Z), v_color));
	dot		$tmp760 $const145 ___463_v_color 	%line{440} %argrw{"wrr"}
	color		___463_transformed_color $tmp756 $tmp758 $tmp760 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:442
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp762 in_rgb_primaries $const81 	%line{442} %argrw{"wrr"}
	neq		$tmp763 $tmp762 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:443
#              color_space == "DCI-P3")
	if		$tmp763 1425 1428 	%line{443} %argrw{"r"}
	eq		$tmp764 in_rgb_primaries $const82 	%argrw{"wrr"}
	neq		$tmp765 $tmp764 $const1 	%argrw{"wrr"}
	assign		$tmp763 $tmp765 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:442
#     else if (color_space == "scene-linear DCI-P3" ||
	if		$tmp763 1433 1573 	%line{442} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:446
#             dot(vector(DCIP3_TO_ACESCG_X), v_color),
	dot		$tmp766 $const146 ___463_v_color 	%line{446} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:447
#             dot(vector(DCIP3_TO_ACESCG_Y), v_color),
	dot		$tmp768 $const147 ___463_v_color 	%line{447} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:448
#             dot(vector(DCIP3_TO_ACESCG_Z), v_color));
	dot		$tmp770 $const148 ___463_v_color 	%line{448} %argrw{"wrr"}
	color		___463_transformed_color $tmp766 $tmp768 $tmp770 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:450
#     else if (color_space == "camera Rec 709")
	eq		$tmp772 in_rgb_primaries $const86 	%line{450} %argrw{"wrr"}
	if		$tmp772 1462 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:452
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const62 1458 	%line{452} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:308
#         Rec1886_EOTF(value[0]),
	compref		$tmp774 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{308} %argrw{"wrr"}
	functioncall	$const62 1443 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp775 $tmp774 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp775 1441 1442 	%argrw{"r"}
	pow		$tmp773 $tmp774 $const47 	%argrw{"wrr"}
	assign		$tmp773 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:309
#         Rec1886_EOTF(value[1]),
	compref		$tmp777 ___750_linearized_color $const2 	%line{309} %argrw{"wrr"}
	functioncall	$const62 1450 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp778 $tmp777 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp778 1448 1449 	%argrw{"r"}
	pow		$tmp776 $tmp777 $const47 	%argrw{"wrr"}
	assign		$tmp776 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	compref		$tmp780 ___750_linearized_color $const11 	%line{310} %argrw{"wrr"}
	functioncall	$const62 1457 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:297
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp781 $tmp780 $const41 	%line{297} %argrw{"wrr"}
	if		$tmp781 1455 1456 	%argrw{"r"}
	pow		$tmp779 $tmp780 $const47 	%argrw{"wrr"}
	assign		$tmp779 $const41 	%argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:310
#         Rec1886_EOTF(value[2]));
	color		___463_v_color $tmp773 $tmp776 $tmp779 	%line{310} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:455
#     else if (color_space == "scene-linear DCI-P3" ||
	dot		$tmp782 $const140 ___463_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{455} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:456
#              color_space == "DCI-P3")
	dot		$tmp784 $const141 ___463_v_color 	%line{456} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:457
#     {
	dot		$tmp786 $const142 ___463_v_color 	%line{457} %argrw{"wrr"}
	color		___463_transformed_color $tmp782 $tmp784 $tmp786 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:459
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	eq		$tmp788 in_rgb_primaries $const87 	%line{459} %argrw{"wrr"}
	if		$tmp788 1494 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:461
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	functioncall	$const57 1490 	%line{461} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp790 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1473 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp791 $tmp790 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp791 1471 1473 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp789 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp789 $tmp790 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp793 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1481 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp794 $tmp793 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp794 1479 1481 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp792 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp792 $tmp793 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp796 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1489 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp797 $tmp796 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp797 1487 1489 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp795 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp795 $tmp796 $const88 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___463_v_color $tmp789 $tmp792 $tmp795 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:464
# {
	dot		$tmp798 $const140 ___463_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{464} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:465
#     color transformed_color;
	dot		$tmp800 $const141 ___463_v_color 	%line{465} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:466
#     vector v_color = vector(input_color);
	dot		$tmp802 $const142 ___463_v_color 	%line{466} %argrw{"wrr"}
	color		___463_transformed_color $tmp798 $tmp800 $tmp802 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:468
#     if (color_space == "sRGB")
	eq		$tmp804 in_rgb_primaries $const89 	%line{468} %argrw{"wrr"}
	if		$tmp804 1526 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:470
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const57 1522 	%line{470} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp806 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1505 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp807 $tmp806 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp807 1503 1505 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp805 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp805 $tmp806 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp809 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1513 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp810 $tmp809 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp810 1511 1513 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp808 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp808 $tmp809 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp812 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1521 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp813 $tmp812 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp813 1519 1521 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp811 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp811 $tmp812 $const56 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___463_v_color $tmp805 $tmp808 $tmp811 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:473
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp814 $const140 ___463_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{473} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:474
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp816 $const141 ___463_v_color 	%line{474} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:475
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp818 $const142 ___463_v_color 	%line{475} %argrw{"wrr"}
	color		___463_transformed_color $tmp814 $tmp816 $tmp818 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:477
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp820 in_rgb_primaries $const90 	%line{477} %argrw{"wrr"}
	if		$tmp820 1558 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:479
#     {
	functioncall	$const57 1554 	%line{479} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:343
#         gamma_CCTF(value[0], gamma),
	compref		$tmp822 ___750_linearized_color $const1 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h"} %line{343} %argrw{"wrr"}
	functioncall	$const57 1537 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp823 $tmp822 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp823 1535 1537 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp821 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp821 $tmp822 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:344
#         gamma_CCTF(value[1], gamma),
	compref		$tmp825 ___750_linearized_color $const2 	%line{344} %argrw{"wrr"}
	functioncall	$const57 1545 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp826 $tmp825 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp826 1543 1545 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp824 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp824 $tmp825 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	compref		$tmp828 ___750_linearized_color $const11 	%line{345} %argrw{"wrr"}
	functioncall	$const57 1553 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:330
#     if (value == 0)
	eq		$tmp829 $tmp828 $const1 	%line{330} %argrw{"wrr"}
	if		$tmp829 1551 1553 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:332
#         return 0;
	assign		$tmp827 $const1 	%line{332} %argrw{"wr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:336
#         return pow(value, gamma);
	pow		$tmp827 $tmp828 $const47 	%line{336} %argrw{"wrr"}
	return
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_transfer_functions.h:345
#         gamma_CCTF(value[2], gamma));
	color		___463_v_color $tmp821 $tmp824 $tmp827 	%line{345} %argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:482
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp830 $const140 ___463_v_color 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h"} %line{482} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:483
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp832 $const141 ___463_v_color 	%line{483} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:484
#     }
	dot		$tmp834 $const142 ___463_v_color 	%line{484} %argrw{"wrr"}
	color		___463_transformed_color $tmp830 $tmp832 $tmp834 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:486
#              color_space == "Rec.2020")
	eq		$tmp836 in_rgb_primaries $const91 	%line{486} %argrw{"wrr"}
	neq		$tmp837 $tmp836 $const1 	%argrw{"wrr"}
	if		$tmp837 1561 1564 	%argrw{"r"}
	eq		$tmp838 in_rgb_primaries $const92 	%argrw{"wrr"}
	neq		$tmp839 $tmp838 $const1 	%argrw{"wrr"}
	assign		$tmp837 $tmp839 	%argrw{"wr"}
	if		$tmp837 1569 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:489
#     }
	dot		$tmp840 $const149 ___463_v_color 	%line{489} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:490
#     else if (color_space == "scene-linear DCI-P3" ||
	dot		$tmp842 $const150 ___463_v_color 	%line{490} %argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:491
#              color_space == "DCI-P3")
	dot		$tmp844 $const151 ___463_v_color 	%line{491} %argrw{"wrr"}
	color		___463_transformed_color $tmp840 $tmp842 $tmp844 	%argrw{"wrrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:493
#         transformed_color = color(
	eq		$tmp846 in_rgb_primaries $const96 	%line{493} %argrw{"wrr"}
	if		$tmp846 1572 1573 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:495
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	assign		___463_transformed_color ___750_linearized_color 	%line{495} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:499
#     {
	assign		___463_transformed_color $const42 	%line{499} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:501
# 
	assign		___475_C ___463_transformed_color 	%line{501} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:536
#         transformed_color = color(
	assign		___475_C $const42 	%line{536} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\maya\\as_maya_cms_syncolor_idt.h:538
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	assign		___750_linearized_color ___475_C 	%line{538} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:499
#             out_color = linearized_color;
	assign		out_color ___750_linearized_color 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{499} %argrw{"wr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:506
#                 in_workingspace_rgb_primaries);
	functioncall	$const152 1621 	%line{506} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:205
#     if (colorspace == "Rec.601")
	eq		$tmp847 in_workingspace_rgb_primaries $const153 	%filename{"C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h"} %line{205} %argrw{"wrr"}
	if		$tmp847 1581 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:207
#         coeffs = color(REC601_D65_LUMINANCE_COEFFS);
	assign		___653_coeffs $const154 	%line{207} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:209
#     else if (colorspace == "Rec.709" || colorspace == "sRGB" ||
	eq		$tmp848 in_workingspace_rgb_primaries $const155 	%line{209} %argrw{"wrr"}
	neq		$tmp849 $tmp848 $const1 	%argrw{"wrr"}
	if		$tmp849 1584 1587 	%argrw{"r"}
	eq		$tmp850 in_workingspace_rgb_primaries $const75 	%argrw{"wrr"}
	neq		$tmp851 $tmp850 $const1 	%argrw{"wrr"}
	assign		$tmp849 $tmp851 	%argrw{"wr"}
	neq		$tmp852 $tmp849 $const1 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:210
#              colorspace == "sRGB/Rec.709")
	if		$tmp852 1589 1592 	%line{210} %argrw{"r"}
	eq		$tmp853 in_workingspace_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp854 $tmp853 $const1 	%argrw{"wrr"}
	assign		$tmp852 $tmp854 	%argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:209
#     else if (colorspace == "Rec.709" || colorspace == "sRGB" ||
	if		$tmp852 1594 1610 	%line{209} %argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:212
#         coeffs = color(REC709_D65_LUMINANCE_COEFFS);
	assign		___653_coeffs $const156 	%line{212} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:214
#     else if (colorspace == "AdobeRGB")
	eq		$tmp855 in_workingspace_rgb_primaries $const157 	%line{214} %argrw{"wrr"}
	if		$tmp855 1597 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:216
#         coeffs = color(ADOBERGB_D65_LUMINANCE_COEFFS);
	assign		___653_coeffs $const158 	%line{216} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:218
#     else if (colorspace == "Rec.2020")
	eq		$tmp856 in_workingspace_rgb_primaries $const77 	%line{218} %argrw{"wrr"}
	if		$tmp856 1600 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:220
#         coeffs = color(REC2020_D65_LUMINANCE_COEFFS);
	assign		___653_coeffs $const159 	%line{220} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:222
#     else if (colorspace == "ACES")
	eq		$tmp857 in_workingspace_rgb_primaries $const92 	%line{222} %argrw{"wrr"}
	if		$tmp857 1603 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:224
#         coeffs = color(ACES_D60_LUMINANCE_COEFFS);
	assign		___653_coeffs $const160 	%line{224} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:226
#     else if (colorspace == "ACEScg")
	eq		$tmp858 in_workingspace_rgb_primaries $const96 	%line{226} %argrw{"wrr"}
	if		$tmp858 1606 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:228
#         coeffs = color(ACESCG_D60_LUMINANCE_COEFFS);
	assign		___653_coeffs $const160 	%line{228} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:230
#     else if (colorspace == "DCI-P3")
	eq		$tmp859 in_workingspace_rgb_primaries $const82 	%line{230} %argrw{"wrr"}
	if		$tmp859 1609 1610 	%argrw{"r"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:232
#         coeffs = color(DCIP3_DCI_LUMINANCE_COEFFS);
	assign		___653_coeffs $const161 	%line{232} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:236
#         coeffs = color(0);
	assign		___653_coeffs $const42 	%line{236} %argrw{"wr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:238
#         string shadername = "";
	compref		$tmp860 ___653_coeffs $const1 	%line{238} %argrw{"wrr"}
	compref		$tmp861 ___750_linearized_color $const1 	%argrw{"wrr"}
	mul		$tmp862 $tmp860 $tmp861 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:239
# 
	compref		$tmp863 ___653_coeffs $const2 	%line{239} %argrw{"wrr"}
	compref		$tmp864 ___750_linearized_color $const2 	%argrw{"wrr"}
	mul		$tmp865 $tmp863 $tmp864 	%argrw{"wrr"}
	add		$tmp866 $tmp862 $tmp865 	%argrw{"wrr"}
# C:/appleseed\\appleseed\\src\\appleseed.shaders\\include\\appleseed\\color\\as_color_helpers.h:240
#         getattribute("shader:shadername", shadername);
	compref		$tmp867 ___653_coeffs $const11 	%line{240} %argrw{"wrr"}
	compref		$tmp868 ___750_linearized_color $const11 	%argrw{"wrr"}
	mul		$tmp869 $tmp867 $tmp868 	%argrw{"wrr"}
	add		out_channel $tmp866 $tmp869 	%argrw{"wrr"}
# C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl:513
#     ]],
	compref		$tmp870 out_color $const1 	%filename{"C:/appleseed/appleseed/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{513} %argrw{"wrr"}
	compref		$tmp871 out_color $const2 	%argrw{"wrr"}
	add		$tmp872 $tmp870 $tmp871 	%argrw{"wrr"}
	compref		$tmp873 out_color $const11 	%argrw{"wrr"}
	add		$tmp874 $tmp872 $tmp873 	%argrw{"wrr"}
	div		out_channel $tmp874 $const162 	%argrw{"wrr"}
	end
